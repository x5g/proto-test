/*
 * @begin:license
 *
 * Copyright (c) 2015-2019, Benjamin Niemann <pink@odahoda.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * @end:license
 */

syntax = "proto2";

import "noisicaa/core/session_data.proto";
import "noisicaa/node_db/node_description.proto";
import "noisicaa/audioproc/public/backend_settings.proto";
import "noisicaa/audioproc/public/control_value.proto";
import "noisicaa/audioproc/public/node_parameters.proto";
import "noisicaa/audioproc/public/node_port_properties.proto";
import "noisicaa/audioproc/public/plugin_state.proto";
import "noisicaa/audioproc/public/processor_message.proto";
import "noisicaa/audioproc/public/project_properties.proto";

package noisicaa.audioproc.pb;

message AddNode {
  required string id = 1;
  optional string name = 2;
  required noisicaa.pb.NodeDescription description = 3;
  optional noisicaa.pb.PluginState initial_state = 4;
  optional string child_realm = 5;
}

message RemoveNode {
  required string id = 1;
}

message ConnectPorts {
  required string src_node_id = 1;
  required string src_port = 2;
  required string dest_node_id = 3;
  required string dest_port = 4;
  required noisicaa.pb.PortDescription.Type type = 5;
}

message DisconnectPorts {
  required string src_node_id = 1;
  required string src_port = 2;
  required string dest_node_id = 3;
  required string dest_port = 4;
}

message SetControlValue {
  required string name = 1;
  required float value = 2;
  required uint32 generation = 3;
}

message SetPluginState {
  required string node_id = 1;
  required noisicaa.pb.PluginState state = 2;
}

message SetNodePortProperties {
  required string node_id = 1;
  required noisicaa.pb.NodePortProperties port_properties = 2;
}

message SetNodeDescription {
  required string node_id = 1;
  required noisicaa.pb.NodeDescription description = 2;
}

message SetNodeParameters {
  required string node_id = 1;
  required noisicaa.pb.NodeParameters parameters = 2;
}

message Mutation {
  oneof type {
    AddNode add_node = 1;
    RemoveNode remove_node = 2;
    ConnectPorts connect_ports = 3;
    DisconnectPorts disconnect_ports = 4;
    SetControlValue set_control_value = 5;
    SetPluginState set_plugin_state = 6;
    SetNodePortProperties set_node_port_properties = 7;
    SetNodeDescription set_node_description = 8;
    SetNodeParameters set_node_parameters = 9;
  }
}

message PluginStateChange {
  required string realm = 1;
  required string node_id = 2;
  required noisicaa.pb.PluginState state = 3;
}

message ControlValueChange {
  required string realm = 1;
  required string node_id = 2;
  required noisicaa.pb.ControlValue value = 3;
}

message CreateRealmRequest {
  required string name = 1;
  optional string parent = 2;
  optional bool enable_player = 3;
  optional string callback_address = 4;
}

message DeleteRealmRequest {
  required string name = 1;
}

message SendNodeMessagesRequest {
  required string realm = 1;
  repeated noisicaa.pb.ProcessorMessage messages = 2;
}

message CreatePluginUIRequest {
  required string realm = 1;
  required string node_id = 2;
}

message CreatePluginUIResponse {
  required uint32 wid = 1;
  required uint32 width = 2;
  required uint32 height = 3;
}

message DeletePluginUIRequest {
  required string realm = 1;
  required string node_id = 2;
}

message PlayFileRequest {
  required string path = 1;
}

message ProfileAudioThreadRequest {
  required uint32 duration = 1;
}

message ProfileAudioThreadResponse {
  required bytes svg = 1;
}

message SetBackendRequest {
  required string name = 1;
  optional noisicaa.pb.BackendSettings settings = 2;
}

message UpdateProjectPropertiesRequest {
  required string realm = 1;
  required noisicaa.pb.ProjectProperties properties = 2;
}

message PipelineMutationRequest {
  required string realm = 1;
  required Mutation mutation = 2;
}

message SetSessionValuesRequest {
  required string realm = 1;
  repeated noisicaa.pb.SessionValue session_values = 2;
}
