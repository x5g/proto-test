// Gateway name space.
package com.barchart.proto.buf.gateway;

// Builder options.
option java_multiple_files = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

message GatewayMessage {

	enum MessageType {
		ADMIN = 0;
		ORDER = 1;
	}

	optional MessageType messageType = 1;
	optional bytes body = 2;

}

enum Side {

	BID = 0;
	ASK = 1;

}

// ***** ***** Admin ***** *****

message PortfolioRequest {

	enum RequestType {
		NULL = 0;
		INFO = 1;
		NEW = 2;
		MODIFY = 3;
		CLOSE = 4;
	}

	optional RequestType requestType = 1;
	optional Portfolio portfolio = 3;
	optional PortfolioPermission permissions = 4;
	optional string contestID = 5;
	optional string gatewayID = 6;
	optional string requestID = 7;

}

message PortfolioResponse {

	enum ResponseType {
		NULL = 0;
		ERROR = 1;
		INFO = 2;
	}

	optional ResponseType responseType = 1;
	repeated Portfolio portfolios = 2;
	optional string responseText = 3;
	optional string gatewayID = 4;
	optional string requestID = 5;
	optional string responseID = 6;

}

message Portfolio {

	enum Status {
		ACTIVE = 0;
		CLOSED = 1;
	}

	optional Status status = 1;

	optional PortfolioPermission permission = 3;
	repeated Position positions = 4;
	repeated Order openOrders = 5;
	repeated Execution executions = 6;

	optional sint64 availableBallanceMantissa = 7;
	optional sint32	availableBallanceExponent = 8;

	optional sint64 previousDayBallanceMantissa = 9;
	optional sint32 previousDayBallanceExponent = 10;

	optional sint64 profitLossMantissa = 11;
	optional sint32 profitLossExponent = 12;

	optional sint64 valAtCloseMantissa = 13;
	optional sint32 valAtCloseExponent = 14;

	optional sint64 created = 15;
	optional sint64 modified = 16;

	optional string name = 17;
	optional string userID = 18;
	optional string gatewayID = 19;
	optional string id = 20;

	optional string clearingPartyNo = 21;
	optional string clearingPartyName = 22;

}

message InstrumentPermission {

	optional string instID = 1;

	optional sint64 maxOrderSizeMantissa = 2;
	optional sint32 maxOrderSizeExponent = 3;

	optional sint64 maxExposureMantissa = 4;
	optional sint32 maxExposureExponent = 5;

	optional sint64 maxPositionMantissa = 6;
	optional sint32 maxPositionExponent = 7;

}

message PortfolioPermission {

	repeated InstrumentPermission params = 1;

	optional sint64 maxPositionMantissa = 2;
	optional sint32 maxPositionExponent = 3;

	optional sint64 minBallanceMantissa = 4;
	optional sint32 minBallanceExponent = 5;

}

message Position {

	optional string instID = 1;

	optional sint64 instPointValueMantissa = 2;
	optional sint32 instPointValueExponent = 3;

	optional sint64 positionMantissa = 4;
	optional sint32 positionExponent = 5;

	optional sint64 closedValueMantissa = 6;
	optional sint32 closedValueExponent = 7;

	optional sint64 avgOpenPriceMantissa = 8;
	optional sint32 avgOpenPriceExponent = 9;

	repeated Fill unallocatedFills = 10;

}

// ***** ***** Order ***** *****

message OrderRequest {

	enum RequestType {
		NULL = 0;
		NEW = 1;
		MODIFY = 2;
		CANCEL = 3;
	}

	optional RequestType requestType = 1;

	optional string instID = 3;
	optional Order order = 4;
	optional string gatewayID = 5;
	optional string requestID = 6;

	optional string userID = 7;
	optional string portID = 8;

}

message OrderResponse {

	enum ResponseType {
		NULL = 0;
		ERROR = 1;
		REJECT = 2;
		EXECUTION = 3;
	}

	optional ResponseType responseType = 1;
	optional string responseText = 2;
	optional Execution execution = 3;
	optional Order order = 4;
	optional string gatewayID = 6;
	optional string requestID = 7;
	optional string responseID = 8;

}

message Fill {

	optional sint64 fillTime = 1;
	optional string instID = 2;
	optional string accountID = 3;
	optional Side side = 4;

	optional sint64 fillQtyMantissa = 5;
	optional sint32 fillQtyExponent = 6;

	optional sint64 avgFillPriceMantissa = 7;
	optional sint32 avgFillPriceExponent = 8;

}

message Execution {

	enum ExecutionType {
		NULL = 0;
		NEW = 1;
		PARTIAL_FILL = 2;
		FILL = 3;
		MODIFY = 4;
		CANCEL = 5;
		REJECT = 6;
		EXPIRE = 7;
	}

	optional ExecutionType executionType = 1;

	optional sint32 chainIndex = 2;

	optional string portID = 3;
	optional string gatewayID = 4;
	optional string instID = 5;
	optional string orderID = 6;
	optional sint64 timeExecuted = 7;
	optional Fill fill = 8;
	repeated Fill legFills = 9;
	optional OrderModification modification = 10;
	optional string userID = 11;

}

message Order {

	enum Type {
		NULL_TYPE = 0;
		MARKET = 1;
		LIMIT = 2;
		STOP = 3;
		STOP_LIMIT = 4;
	}

	optional Type type = 1;

	enum Status {
		NULL_STATUS = 0;
		NEW = 1;
		PARTIAL = 2;
		FILLED = 3;
		REJECTED = 4;
		CANCELED = 5;
		EXPIRED = 6;
	}

	optional Status status = 2;

	enum Instruction {
		NULL_INSTRUCTION = 0;
		ALL_OR_NONE = 1;
		QUANTITY_TRIGGERED_STOP = 2;
		PARKED = 3;
		FUNARI = 4;
		MARKET_IF_TOUCHED = 5;
		MARKET_LIMIT = 6;
		TRAILING = 7;
	}

	repeated Instruction instructions = 3;

	enum TimeInForce {
		NULL_TIMEINFORCE = 0;
		DAY = 1;
		IMMEDIATE_OR_CANCEL = 2;
		FILL_OR_KILL = 3;
		GOOD_TILL_DATE = 4;
	}

	optional TimeInForce timeInForce = 4;

	optional string portID= 5;
	optional string instID = 6;
	optional sint64 timeCreated = 7;
	optional sint64 timeModified = 8;
	optional Side side = 9;

	optional sint64 limitPriceMantissa = 10;
	optional sint32 limitPriceExponent = 11;

	optional sint64 stopPriceMantissa = 12;
	optional sint32 stopPriceExponent = 13;

	optional sint64 lastFillPriceMantissa = 14;
	optional sint32 lastFillPriceExponent = 15;

	optional sint64 avgFillPriceMantissa = 16;
	optional sint32 avgFillPriceExponent = 17;

	optional sint64 totalQtyMantissa = 18;
	optional sint32 totalQtyExponent = 19;

	optional sint64 lastFillQtyMantissa = 20;
	optional sint32 lastFillQtyExponent = 21;

	optional sint64 cumulativeFilledQtyMantissa = 22;
	optional sint32 cumulativeFilledQtyExponent = 23;

	optional sint64 remainingQtyMantissa = 24;
	optional sint32 remainingQtyExponent = 25;

	repeated Execution history = 26;

	optional string ID = 27;

	optional sint64 instPointValMantissa = 28;
	optional sint32 instPointValExponent = 29;

	optional string userID = 30;

}

message OrderModification {

	optional Order.Type type = 1;

	optional sint64 newLimitMantissa = 2;
	optional sint32 newLimitExponent = 3;

	optional sint64 newStopMantissa = 4;
	optional sint32 newStopExponent = 5;

	optional sint64 newQtyMantissa = 6;
	optional sint32 newQtyExponent = 7;

}


























