syntax = "proto2";

package pktComms;

// Where a DigSig field is present, it must be SHA1 (20 bytes, 160 bits) and 
// it must cover all other fields present in the order shown.  Messages whose 
// DigSig fields do not match the other fields must be silently discarded (but 
// should be logged, at least during development).

// Opaque contents get copied through to the consensus layer
message AppMsg {
    optional uint64 AppNdx      = 1;
    optional uint64 MsgN        = 2;
    optional bytes  ID          = 3;
    optional bytes  Contents    = 4;
    optional bytes  Salt        = 12;
    optional bytes  DigSig      = 13;
}

// First message sent; initiates a communications cycle.  The first MsgN
// must be 1.  ID is the nodeID of the sender, a 20- (SHA1) or 32-byte 
// (SHA256 or SHA3) value.  sigPubKey is the sender's RSA sig public key; 
// commsPubKey is the sender's RSA comms public key.  The TCP address 
// is conventionally a dotted quad followed by a port number (A.B.C.D:P).
//
message Hello {
    optional uint64 MsgN		= 2;
    optional bytes  ID			= 3;
    optional bytes  SigPubKey	= 4;
    optional bytes  CommsPubKey	= 5;
    optional string TCPAddr		= 6;
    optional bytes  Salt		= 12;
    optional bytes  DigSig		= 13;
}

// Ends a communications cycle.
message Bye {
    optional uint64 MsgN		= 2;
    optional bytes  ID			= 3;
    optional bytes  Salt		= 12;
    optional bytes  DigSig		= 13;
}

// Sent at regular intervals.
message KeepAlive {
    optional uint64 MsgN		= 2;
    optional bytes  ID			= 3;
    optional bytes  Salt		= 12;
    optional bytes  DigSig		= 13;
}

message Ack {
    optional uint64 MsgN		= 2;
    optional bytes  ID			= 3;
    optional uint64 YourMsgN	= 4;
    optional bytes  YourID		= 5;
    optional bytes  Salt		= 12;
    optional bytes  DigSig		= 13;
}

message Error {
    optional uint64 MsgN		= 2;
    optional bytes  ID			= 3;
    optional uint64 YourMsgN	= 4;
    optional bytes  YourID		= 5;
    optional uint64 ErrCode     = 6;
    optional string ErrDesc     = 7;
    optional bytes  Salt		= 12;
    optional bytes  DigSig		= 13;
}
