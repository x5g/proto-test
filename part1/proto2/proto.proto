syntax = "proto3";

package cluster.tcs;

// ## - WORK related protocols
message MasterAck {
    string workId = 1;
}

message Work {
    string workId = 1;
    string job = 2;
}

message WorkResult {
    string workId = 1;
    string result = 2;
}

// # - Messages from Workers
message RegisterWorker {
    string workerId = 1;
}

message DeRegisterWorker {
    string workerId = 1;
}

message WorkerRequestsWork {
    string workerId = 1;
}

message WorkIsDone {
    string workerId = 1;
    string workId = 2;
    string result = 3;
}

message WorkFailed {
    string workerId = 1;
    string workId = 2;
}

// # - Messages to Workers
message WorkIsReady {
    string marker = 1;
}

message WorkIsDoneAck {
    string id = 1;
}

// # - WorkExecutorProtocol
message ExecuteWork {
    string n = 1;
}

message WorkExecuted {
    string result = 1;
}

// ## - TRANSPORT related protocols


message Transport {
    string transportId = 1;
    string job = 2;
}

message TransportResult {
    string transportId = 1;
    string result = 2;
}

// # - Messages from Transporters
message RegisterTransporter {
    string transporterId = 1;
}


message DeRegisterTransporter {
    string transporterId = 1;
}


message TransporterRequestsTransport {
    string transporterId = 1;
}


message TransportIsDone {
    string transporterId = 1;
    string transportId = 2;
    string result = 3;
}

message TransportFailed {
    string transporterId = 1;
    string transportId = 2;
}

// # - Messages to Transporters
message TransportIsReady {
    string marker = 1;
}

message TransportAck {
    string id = 1;
}

// # - TransportExecutorProtocol
message DoTransfer {
    string transportId = 1;
    string n = 2;
}

message TransportComplete {
    string result = 1;
}


//# - WORK events
message WorkAccepted {
    Work work = 1;
}
message WorkStarted {
    string workId = 1;
}
message WorkCompleted {
    string workId = 1;
    string result = 2;
}
message WorkerFailed {
    string workId = 1;
}
message WorkerTimedOut {
    string workId = 1;
}



//# - TRANSPORT events

message TransportAccepted {
    Transport transport = 1;
}
message TransportStarted {
    string transportId = 1;
}
message TransportCompleted {
    string transportId = 1;
    string result = 2;
}
message TransporterFailed {
    string transportId = 1;
}
message TransporterTimedOut {
    string transportId = 1;
}

