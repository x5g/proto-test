syntax = "proto3";

package gigx;

option go_package = "gigxRR";

//#Database modal structs
message User {
    string id=1;
    string name=2;
    string surname=3;
    string email=4;
    string username=5;
    string password=6;
    string description=7;
    string image_path=8;
    int32  total_space=9;
    string created_date=10;
    string updated_date=11;
    string language_code=12;
    bool   is_account_confirm=13;
}

message Follow {
    string id=1;
    string follower_id=2;
    string followed_id=3;
    string follow_date=4;
    string unfollow_date=5;
}

message Folder {
    string id=1;
    string name=2;
    string user_id=3;
    string created_date=4;
    string updated_date=5;
}

message File {
    string id=1;
    string user_id=2;
    string folder_id=3;
    string name=4;
    string description=5;
    string created_date=6;
    string updated_date=7;
    string file_hash=8;
    bool is_buried=9;
    bool is_folder_file=10;
    bool is_starred=11;
    bool is_trash=12;
    bool is_deleted=13;
}

message Buried {
    string id=1;
    string user_id=2;
    string file_name=3;
    string file_hash=4;
    string public_hash=5;
    string description=6;
    string buried_date=7;
    string digging_date=8;   
}
//Only for use login 
message UserLogin {
    string username=1;
    string password=2;
    string language_code=3;
    string country_flag=4;
    int32  gmt_off_set=5;
    string token=6;
}

message GeneralRequest {
    string email_address=1;
    string email_type=2;
    string register_verification_token=3;
    string forgot_password_verification_token=4;
    string password=5;
    string password_confirm=6;
}

message GeneralResponse {
    string message=1;
    string token=2;
    bool is_email_success=3;
    bool is_token_success=4;
    bool is_operation_success=5;
}

message IpInformation {
    string ip_address=1;
    string language_code=2;
    string country_flag=3;
    string country_code=4;
    string country_name=5;
    int32  gmt_off_set=6;

}

//Check is service working ?
message HelloRequest {
    string message = 1;
}
  
message HelloResponse {
    string message = 1;
}

//User methods start
message RegisterUserRequest {
    User user=1;
}
message RegisterUserResponse {
    GeneralResponse general_response =1;
}
message CheckUserToRegisterRequest {
    User user=1;
}
message CheckUserToRegisterResponse {
    GeneralResponse general_response =1;
}
message LoginUserRequest {
    UserLogin user=1;
}
message LoginUserResponse {
    UserLogin user=1;
}
message UpdateUserRequest {
    User user=1;
}
message UpdateUserResponse {
    User user=1;
}
message DeleteUserRequest {
    string user_id=1;
}
message DeleteUserResponse {
    GeneralResponse general_response =1;
}
//User methods finish
message UpdateFileRequest {
    File file=1;
}
message UpdateFileResponse {
    File file=1;
}
message GetFileRequest {
    string file_id=1;
    string file_hash=2;
}
message GetFileResponse {
    File file=1;
}
message GetAllFilesRequest {
    File file=1;
}
message GetAllFilesResponse {
    File file=1;
}
message DeleteFileRequest {
    string file_id=1;
    string file_hash=2;
}
message DeleteFileResponse {
    GeneralResponse general_response =1;
}
message SendEmailRequest {
    GeneralRequest generalRequest=1;
}
message SendEmailResponse {
    GeneralResponse general_response =1;
}
message CheckVerificationLinkRequest {
    GeneralRequest generalRequest=1;
}
message CheckVerificationLinkResponse {
    GeneralResponse general_response=1;
}
message GetIpInformationRequest {
    string message=1;
}
message GetIpInformationResponse {
    IpInformation ip_information=1;
}
message ResetUserPasswordRequest {
    GeneralRequest generalRequest=1;
}
message ResetUserPasswordResponse {
    GeneralResponse general_response=1;
}
message GetUserRequest {
    string username=1;
}
message GetUserResponse {
    User user=1;
    File file=2;
}
service GigxRRService{
    //Say Hello 
    rpc SayHello (HelloRequest) returns (HelloResponse);
    //User methods
    rpc Login                       (LoginUserRequest) returns (LoginUserResponse);
    rpc Register                    (RegisterUserRequest) returns (RegisterUserResponse);
    rpc CheckUserToRegister         (CheckUserToRegisterRequest) returns (CheckUserToRegisterResponse);
    rpc ResetUserPassword           (ResetUserPasswordRequest) returns (ResetUserPasswordResponse);
    rpc GetUser                     (GetUserRequest) returns  (GetUserResponse);
    rpc UpdateUser                  (UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser                  (DeleteUserRequest) returns (DeleteUserResponse);
    //Services
    rpc SendEmail                   (SendEmailRequest) returns (SendEmailResponse);
    rpc GetIpInformation            (GetIpInformationRequest) returns (GetIpInformationResponse);
    rpc CheckVerificationLink      (CheckVerificationLinkRequest) returns (CheckVerificationLinkResponse);
    //File methods
    rpc GetFile                     (GetFileRequest) returns (GetFileResponse);
    rpc GetAllFiles                 (GetAllFilesRequest) returns (stream GetAllFilesResponse);
    rpc UpdateFile                  (UpdateFileRequest) returns (UpdateFileResponse);
    rpc DeleteFile                  (DeleteFileRequest) returns (DeleteFileResponse);
}