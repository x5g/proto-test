syntax = "proto3";

package core;

message UpsertOTAAHandlerReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    bytes   DevEUI      = 3;
    bytes   AppKey      = 4;
}

message UpsertOTAAHandlerRes{}

message DeleteOTAAHandlerReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    bytes   DevEUI      = 3;
}

message DeleteOTAAHandlerRes{}

message UpsertABPHandlerReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    bytes   DevAddr     = 3;
    bytes   NwkSKey     = 4;
    bytes   AppSKey     = 5;
    uint32  Flags       = 6;
}

message UpsertABPHandlerRes {}

message DeleteABPHandlerReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    bytes   DevAddr     = 3;
}

message DeleteABPHandlerRes {}

message ListDevicesHandlerReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
}

message ListDevicesHandlerRes {
    repeated HandlerOTAADevice  OTAA    = 1;
    repeated HandlerABPDevice   ABP     = 2;
}

message HandlerABPDevice {
    bytes   DevAddr     = 2;
    bytes   NwkSKey     = 3;
    bytes   AppSKey     = 4;
    uint32  FCntUp      = 5;
    uint32  FCntDown    = 6;
    uint32  Flags       = 7;
}

message HandlerOTAADevice {
    bytes   DevEUI      = 1;
    bytes   DevAddr     = 2;
    bytes   NwkSKey     = 3;
    bytes   AppSKey     = 4;
    bytes   AppKey      = 5;
    uint32  FCntUp      = 7;
    uint32  FCntDown    = 8;
}

message GetDefaultDeviceReq {
    string    Token       = 1;
    bytes     AppEUI      = 2;
}

message GetDefaultDeviceRes {
    bytes     AppKey      = 1;
}

message SetDefaultDeviceReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    bytes   AppKey      = 3;
}

message GetPayloadFunctionsReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
}

message GetPayloadFunctionsRes {
    string  Decoder     = 1;
    string  Converter   = 2;
    string  Validator   = 3;
}

message SetPayloadFunctionsReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    string  Decoder     = 11;
    string  Converter   = 12;
    string  Validator   = 13;
}

message SetPayloadFunctionsRes {
}

message TestPayloadFunctionsReq {
    string  Token       = 1;
    bytes   AppEUI      = 2;
    bytes   Payload     = 11;
    string  Decoder     = 21;
    string  Converter   = 22;
    string  Validator   = 23;
}

message TestPayloadFunctionsRes {
    string  Fields      = 1;
    bool    Valid       = 2;
}

message SetDefaultDeviceRes {}

service HandlerManager {
    rpc UpsertOTAA           (UpsertOTAAHandlerReq)      returns     (UpsertOTAAHandlerRes);
    rpc UpsertABP            (UpsertABPHandlerReq)       returns     (UpsertABPHandlerRes);
    rpc ListDevices          (ListDevicesHandlerReq)     returns     (ListDevicesHandlerRes);
    rpc DeleteOTAA           (DeleteOTAAHandlerReq)      returns     (DeleteOTAAHandlerRes);
    rpc DeleteABP            (DeleteABPHandlerReq)       returns     (DeleteABPHandlerRes);
    rpc GetDefaultDevice     (GetDefaultDeviceReq)       returns     (GetDefaultDeviceRes);
    rpc SetDefaultDevice     (SetDefaultDeviceReq)       returns     (SetDefaultDeviceRes);
    rpc GetPayloadFunctions  (GetPayloadFunctionsReq)    returns     (GetPayloadFunctionsRes);
    rpc SetPayloadFunctions  (SetPayloadFunctionsReq)    returns     (SetPayloadFunctionsRes);
    rpc TestPayloadFunctions (TestPayloadFunctionsReq)   returns     (TestPayloadFunctionsRes);
}
