// To create _pb2.py and _pb2_grpc.py files, run the command,
// python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. PowerConsumptionPrediction.proto

syntax = "proto3";
package power_consumption_prediction;

// RPC definition.
service PowerConsumptionPrediction {

    // A simple RPC.
    // An error is returned if there is no meter data for the given request.
    rpc GetPowerConsumptionPrediction (Request) returns (Reply) {}

}

// The request message containing the requested prediction information.
message Request {

    // Building name
    string building = 1;

    // Forecast start time in unix nanoseconds
    int64 start = 2;

    // Forecast end time in unix nanoseconds
    int64 end = 3;

    // The frequency/duration window (e.g., 10s, 15m, 1h)
    // Supported units are: d,h,m,s
    // Note: Keep it 5 min for now
    string window = 4;

    // Dictionary mapping zone name with state
    message Dict {

        // Zone name
        string zone = 1;

        // State
        int32 state = 2;

    }

    // Dictionary of zone names and the state they need the prediction for.
    repeated Dict map_zone_state = 5;
}

// The response message containing power consumption predictions
message Reply {

    // Dataframe structure for power consumption prediction
    message PowerConsumptionPredictionPoint {

        // Time
        string time = 1;

        // Power consumption
        double power = 2;

    }

    // Dataframe containing power consumption predictions
    repeated PowerConsumptionPredictionPoint point = 1;

}