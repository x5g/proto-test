

local_message Vectors {
  repeated GmVector3 vector = 1;
}

local_message NpcRequest {
  enum Command {
    None = 0;
    Convert = 1;
  }
  optional Command command = 1;
  optional string characterId = 2;
}

local_message NpcUpdate {
  enum Command {
    None = 0;
    Guard = 1;
    Attack = 2;
    Retreat = 3;
    Stay = 4;
    ChangeGroup = 5;
    ChangeFaction = 6;
    SetLeader = 7;
  }

  optional Command command = 1;
  optional string target = 2;
  optional int32 health = 3;
  optional bool isDead = 4;
  optional Factions.Faction faction = 5;
  optional NpcGroupConfig groupConfig = 6;
  optional string leaderId = 7;
}

local_message SyncComponentMessage {
  optional string id = 1;
  optional NpcUpdate npcUpdate = 2;
}

local_message NpcName {
  optional string id = 1;
  optional string firstName = 2;
  optional string lastName = 3;
  optional int32 recordId = 4;
  optional bool taken = 5;
}

local_message NpcSyncData {
  enum Action {
    Waypoint = 0;
    Attack = 1;
    Guard = 2;
    Leash = 3;
  }

  enum AiType {
    Civilian = 0;
    Soldier = 1;
    Mob = 2;
  }
  optional GmTransform transform = 1;
  optional string moveTarget = 2;
  optional string combatTarget = 3;
  optional bool hasLos = 4;
  optional float combatTargetDistance = 5;
  optional float heading = 6;
  optional Action action = 7;
  optional string referenceId = 8;
  optional Factions.Faction faction = 9;
  optional string id = 10;
  optional float combatRange = 11;
  optional AiType aiType = 12;
  optional string leaderId = 13;
  optional string prefab = 14;
  optional float playerSpeed = 15;
}

local_message NpcGroupConfig {
  repeated NpcConfig npcConfig = 1;
  optional string leader = 3;
  optional Factions.Faction faction = 4;
  optional string id = 6;
  optional string ownerId = 7;
  optional string region = 8;
}

local_persistent_message NpcGroupDatas {
  optional string id = 1;
  optional int32 recordId = 2;
  optional string data = 3;
}

local_message NpcConfig {
  optional string id = 1;
  optional string referenceId = 2;
  optional string prefab = 3;
}

local_message GmGameObject {
  optional string name = 1;
  optional GmTransform transform = 2;
}

local_message SyncObject {
  enum Type {
    None = 0;
    NpcSyncData = 1;
  }
  
  optional Type type = 1;
  optional NpcSyncData npcSyncData = 2;
  optional string id = 3;
  optional int64 lastUpdate = 4;
}

local_message SyncObjects {
  repeated SyncObject syncObject = 1;
}

local_message UnityMessage {
  optional SyncObjects syncObjects = 1;
  optional string playerId = 2;
  optional UnityEngineRequest unityEngineRequest = 3;
  optional UnityEngineResponse unityEngineResponse = 4;
  optional UnityRegionUpdate unityRegionUpdate = 5;
  optional GroupSpawnRequest groupSpawnRequest = 6;
  optional SyncComponentMessage syncComponentMessage = 7;
  optional SpawnRequest spawnRequest = 8;
}

local_message UnityEngineRequest {
    optional OverlapSphereRequest overlapSphereRequest = 1;
    optional RaycastRequest raycastRequest = 2;
    optional SphereCastRequest sphereCastRequest = 3;
    optional InstantiateRequest instantiateRequest = 4;
    optional DestroyRequest destroyRequest = 5;
    optional PathRequest pathRequest = 6;

}

local_message UnityEngineResponse {
    optional OverlapSphereResponse overlapSphereResponse = 1;
    optional RaycastResponse raycastResponse = 2;
    optional SphereCastResponse sphereCastResponse = 3;
    optional InstantiateResponse instantiateResponse = 4;
    optional DestroyResponse destroyResponse = 5;
    optional PathResponse pathResponse = 6;
}


local_message UnityRegionUpdate {
  optional string playerId = 1;
  optional string region = 2;
  optional GmVector3 position = 3;
  optional float size = 4;
}

local_message GroupSpawnRequest {
  optional NpcGroupConfig npcGroupConfig = 1;
  optional string region = 3;
}


local_message SpawnRequest {
  optional NpcConfig npcConfig = 1;
  optional string groupReferenceId = 2;
  optional string region = 3;
}

local_message PathRequest {
  optional GmVector3 start = 1;
  optional GmVector3 end = 2;
  optional int32 messageId = 3;
}

local_message PathResponse {
  enum Status {
      None = 0;
      Success = 1;
      NotFound = 2;
      Busy = 3;
  }
  optional Status status = 1;
  repeated GmVector3 path = 2;
  optional int32 messageId = 3;
}

local_message DestroyRequest {
  optional string name = 1;
  optional int32 messageId = 2;
}

local_message DestroyResponse {
  enum Status {
    None = 0;
    Success = 1;
    NotFound = 2;
  }
  optional Status status = 1;
  optional int32 messageId = 2;
}

local_message InstantiateRequest {
  optional string prefab = 1;
  optional string name = 2;
  optional GmVector3 position = 3;
  optional GmQuaternion rotation = 4;
  optional int32 messageId = 5;
}

local_message InstantiateResponse {
  enum Status {
    None = 0;
    Success = 1;
    PrefabNotFound = 2;
    Duplicate = 3;
  }
  optional Status status = 1;
  optional int32 messageId = 2;
}

local_message RaycastRequest {
  required string originId = 1;
  required string targetId = 2;
  required float maxDistance = 3;
  optional string layerMask = 4;
  optional bool all = 5;
  optional int32 messageId = 6;
}

local_message RaycastResponse {
   repeated GmGameObject gameObjects = 1;
   optional bool hit = 2;
   optional int32 messageId = 3;
}

local_message SphereCastRequest {
  required GmVector3 origin = 1;
  required float radius = 2;
  required GmVector3 direction = 3;
  optional string layerMask = 4;
  required float maxDistance = 5;
  optional bool all = 6;
  optional int32 messageId = 7;
}

local_message SphereCastResponse {
  repeated GmGameObject gameObjects = 1;
  optional int32 messageId = 2;
}

local_message OverlapSphereRequest {
  required GmVector3 origin = 1;
  required float radius = 2;
  optional string layerMask = 3;
  optional int32 messageId = 4;
}

local_message OverlapSphereResponse {
  repeated GmGameObject gameObjects = 1;
  optional int32 messageId = 3;
}

local_message VitalsContainer {
  repeated Vitals vitals = 1;
}

local_persistent_message Boat {

  enum State {
    None = 0;
    Docked = 1;
    Active = 2;
    Inactive = 3;
  }
  
  optional string id = 1;
  optional int32 recordId = 2;
  optional string zone = 3;
  optional sint32 x = 4;
  optional sint32 y = 5;
  optional sint32 z = 6;
  optional string playerItemId = 7;
  optional string ownerId = 8;
  optional int32 heading = 9;
  optional string dockId = 10;
  optional State state = 11;
  optional string captainId = 12;
}

local_message BoatAction {
  enum Action {
    None = 0;
    Dock = 1;
    Launch = 2;
    Recover = 3;
    UnDock = 4;
    SetCaptain = 5;
    Status = 6;
  }
  optional Boat boat = 1;
  optional Action action = 2;
  optional bool success = 3;
}

local_persistent_message Vitals {

  enum Template {
    PlayerTemplate = 0;
    BuildObjectTemplate = 1;
    NpcTemplate = 2;
    GuardTemplate = 3;
    CitizenTemplate = 4;
    BanditTemplate = 5;
    PlayerItemTemplate = 6;
    BoatTemplate = 7;
  }
  
  enum VitalsType {
    None = 0;
    Character = 1;
    Object = 2;
    BuildObject = 3;
    PlayerItem = 4;
    Boat = 5;
  }
 
   
  enum Attribute {
    SpellResist = 0;
    ElementalResist = 1;
    SpellPenetration = 2;
    MagicRegen = 3;
    HealthRegen = 4;
    StaminaRegen = 5;
    Armor = 6;
    Magic = 7;
    Health = 8;
    Stamina = 9;
    MovementSpeed = 10;
    AbilitySpeed = 11;
  }
  
  optional string characterId = 1;
  optional int64 lastCombat = 5;
  optional int32 dead = 6;
  optional string entityId = 15;
  optional VitalsType type = 18;
  optional int32 spellResist = 22;
  optional int32 elementalResist = 23;
  optional int32 spellPenetration = 24;
  optional int32 magicRegen = 25;
  optional int32 healthRegen = 26;
  optional int32 staminaRegen = 27;
  optional int32 armor = 28;
  optional int32 magic = 29;
  optional int32 health = 30;
  optional int32 stamina = 31;
  optional int32 movementSpeed = 32;
  optional int32 abilitySpeed = 33;
  optional Template template = 34;
  optional bool isBaseVitals = 35;
  optional float combatRegenMod = 36;
  optional bool inCombat = 37;
  optional string zoneName = 38;
 optional string id = 40;
 
  optional int32 spellResistMax = 41;
  optional int32 elementalResistMax = 42;
  optional int32 spellPenetrationMax = 43;
  optional int32 magicRegenMax = 44;
  optional int32 healthRegenMax = 45;
  optional int32 staminaRegenMax = 46;
  optional int32 armorMax = 47;
  optional int32 magicMax = 48;
  optional int32 healthMax = 49;
  optional int32 staminaMax = 50;
  optional int32 movementSpeedMax = 51;
  optional int32 abilitySpeedMax = 52;
  
  optional int32 updateId = 53;
  optional int32 recordId = 54;
  optional float deathTime = 56;
}

local_message VitalsUpdateContainer {
  repeated VitalsUpdate vitalsUpdate = 1;
}

local_message VitalsRequest {
  optional string entityId = 1;
  optional Vitals.VitalsType vitalsType = 2;
}

local_message VitalsUpdate {
  repeated string attribute = 1;
  repeated int32 value = 2;
  repeated int32 max = 3;
  optional int32 dead = 4;
  optional bool inCombat = 5;
  optional int32 updateId = 6;
}

local_message CombatLog {

  enum Type {
    AttributeDecrease = 0;
    AttributeIncrease = 1;
  }
  
  optional string origin = 1;
  optional string target = 2;
  optional int32 value = 3;
  optional Type type = 4;
}

local_message StatusEffect {
  enum Type {
  	StatusEffectNone = 0;
    AttributeDecrease = 1;
    AttributeIncrease = 2;
    AttributeMaxIncrease = 3;
    AttributeMaxDecrease = 4;
}

  
  enum DamageType {
    DamageTypeNone = 0;
    Physical = 1;
    Magic = 2;
    Elemental = 3;
  }
  
  enum Resource {
    ResourceNone = 0;
    ResourceMagic = 1;
    ResourceStamina = 2;
  }
  
  optional Type type = 1;
  optional string id = 2;
  optional int32 duration = 3;
  optional int32 ticks = 4;
  optional int32 minValue = 6;
  optional int32 maxValue = 7;
  optional string particleEffect = 8;
  optional DamageType damageType = 9;
  optional string icon_path = 10;
  optional string icon_uuid = 11;
  optional int32 ticksPerformed = 12;
  optional Resource resource = 13;
  optional int32 resourceCost = 14;
  optional int32 range = 15;
  optional string attribute = 17;
  optional int32 maxStacks = 18;
  optional string effectPath = 19;
  optional string effectUuid = 20;
  optional UnityObject hitSound = 21;
  optional UnityObject hitEffect = 22;
  optional float buildObjectDamageModifier = 23;
  optional bool allowMultipleFromSameOrigin = 24;
}

local_message StatusEffects {
  repeated StatusEffect statusEffect = 1;
}

local_message TerrainEdit {
  enum Type {
  NONE = 0;
  DETAIL = 1;
  ALPHA = 2;
  HEIGHT = 3;
  TREE = 4;
  }
  
  optional  int32 x = 1;
  optional int32 y = 2;
  optional int32 detailLayer = 3;
  optional int32 value = 4;
  optional Type type = 5;
  optional string id = 6;
  optional int32 recordId = 7;
  optional int32 texture = 8;
  optional float height = 9;
  optional int64 createdAt = 10;
  optional string terrain = 11;
}

local_message TerrainEdits {
  repeated TerrainEdit terrainEdit = 1;
}

local_message GroundBlockObject {
  enum Status {
    NONE = 0;
    PLACED = 1;
    CLEARED = 2;
    TOP = 3;
  }
   
  repeated GmVector3 vertices = 1;
  optional GmVector3 position = 2;
  optional GmQuaternion rotation = 3;
  optional string id = 4;
  optional int32 verticeCount = 5;
  optional string tag = 6;
  optional string layer = 7;
  optional sint32 gbLayer = 8;
  optional bool molded = 9;
  optional Status status = 10;
  optional bool canRemove = 11;
  optional bool isTop = 12;
  optional sint32 gbType = 13;
}

local_message Ping {
  optional string id = 1;
}
local_message Pong {
  optional string id = 1;
}

local_message GmStats {
  optional string id = 1;
  optional string action = 2;
  optional int64 messageCountIn = 3;
  optional int64 messageCountOut = 4;
  optional int64 messageCountInOut = 5;
  optional int64 bytesOut = 6;
  optional int32 connectionCount = 7;
  optional int64 playerBytesOut = 8;
  optional string playerId = 9;
  optional int64 bytesPerMessageOut = 10;
}


local_persistent_message Territory {
  required string id = 1;
  required string owner = 2;
  optional int32 recordId = 3;
  optional string keep = 4;
}

local_message Territories {
  repeated Territory territories = 1;
}
  
local_persistent_message Guild {
  required string id = 1;
  required string ownerId = 4;
  optional int32 recordId = 5;
  optional string name = 6;
}

local_persistent_message GuildInvite {
  required string id = 1;
  required string to = 2;
  required string from =3 ;
  optional int32 recordId = 4;
  optional string guildId = 5;
}

local_message GuildInvites {
  repeated GuildInvite guildInvite = 1;
}

local_message GuildInfo {
  required Guild guild = 1;
  repeated string characterId = 2;
}

local_message Guilds {
  repeated Guild guild = 1;
}

local_persistent_message WorldObject {
  optional string playerItemId = 1;
  optional int32 action = 2;
  optional string id = 3;
  optional int32 recordId = 4;
  optional string ownerId = 5;
  optional int32 x = 6;
  optional int32 y = 7;
  optional int32 z = 8;
  optional int32 rx = 9;
  optional int32 ry = 10;
  optional int32 rz = 11;
  optional int32 rw = 12;
  optional int32 maxHealth = 13;
  optional int32 health = 14;
  optional string parentId = 15;
  optional bool destructable = 16;
  optional string prefab = 17;
  optional int32 type = 18;
  optional string grid = 19;
  optional string currentUser = 20;
  optional int32 state = 21;
}

local_persistent_message BuildObjectDatas {
  required string id = 1;
  optional string dataText = 2;
  optional int32 recordId = 3;
  optional string characterId = 4;
  optional string zone = 5;
  optional int32 group = 6;
}

local_message BuildObject {

  enum Action {
    None = 0;
    Save = 1;
    UpdateProp = 2;
    SetHealth = 3;
  }
  
  enum State {
    Active = 0;
    Removed = 1;
    Destroyed = 2;
  }
  
  optional string playerItemId = 1;
  optional Action action = 2;
  optional string id = 3;
  optional int32 recordId = 4;
  optional string ownerId = 5;
  optional int32 x = 6;
  optional int32 y = 7;
  optional int32 z = 8;
  optional int32 rx = 9;
  optional int32 ry = 10;
  optional int32 rz = 11;
  optional int32 rw = 12;
  optional int32 health = 14;
  optional int32 templateId = 18;
  optional string grid = 19;
  optional int64 updatedAt = 22;
  optional State state = 23;
  optional int32 updateId = 24;
  optional bool isFloor = 25;
  optional bool isDestructable = 26;
  optional bool hasDoor = 27;
  optional int32 doorStatus = 28;
  optional GroundBlockObject groundBlockObject = 29;
  optional bool isGroundBlock = 30;
  optional int32 chunk = 31;
  optional TerrainEdit terrainEdit = 32;
  optional bool isTerrainEdit = 33;
  optional bytes customBytes = 34;
  optional string customString = 35;
  optional string textureId = 36;
  optional bytes slots = 37;
  optional int64 placedAt = 38;
  optional SlotInfo slotInfo = 40;
  optional string zone = 41;
  optional int32 version = 42;
  optional int32 group = 43;
}

local_message BuildObjectGroup {
   enum Action {
     None = 0;
     Reset = 1;
     Destroy = 2;
   }
   optional int32 group = 1;
   optional Action action = 2;
   optional int64 placedAt = 3;
   optional string ownerId = 4;
 }
  
 local_message SlotInfo {
   required string placedBlockId = 1;
   required string slotId = 2;
 }
 
 local_message BuildObjectSlot {
   required string slotId = 1;
   required string buildObjectId = 2;
   optional int64 placedAt = 3;
   optional bool buildOverTime = 4;
   optional int32 buildTime = 5;
 }
 
 local_message BuildObjectSlots {
   repeated BuildObjectSlot buildObjectSlot = 1;
 }
 
local_message BuildObjects {
  enum Action {
    None = 0;
    GetStatus = 1;
    PropUpdate = 2;
    SetRotation = 3;
    HttpSave = 4;
  }
  
  repeated BuildObject buildObject = 1;
  optional Action action = 2;
  optional int32 requestedUpdateId = 3;
  optional int32 currentUpdate = 4;
}

local_message BuildObjectChunk {
  optional bytes data = 1;
  optional int32 chunk = 2;
}

local_message BuildObjectChunks {
  repeated BuildObjectChunk buildObjectChunk = 1;
 }

local_persistent_message BuildableArea {
  required string id = 1;
  required string ownerId = 2;
  optional GmVector3 size = 3;
  optional GmVector3 position = 4;
  optional int32 recordId = 5;
}

local_message BuildableAreas {
  enum Action {
    None = 0;
    GetAll = 1;
    Claim = 2;
    Register = 3;
    Release = 4;
  }
  
  repeated BuildableArea buildableArea = 1;
  optional Action action = 2;
  
}
 
local_message GmBounds {
  optional GmVector3 min = 1;
  optional GmVector3 max = 2;
}


local_message WorldObjects {
  repeated WorldObject worldObject = 1;
}

local_message SiegeCommand {
  enum Action {
    ActionNone = 0;
    SetRotation = 1;
    Use = 2;
    Release = 3;
    Fire = 4;
  }
  
  enum Result {
    ResultNone = 0;
    Approved = 1;
    Declined = 2;
  }
  
  optional Action action = 1;
  optional BuildObject buildObject = 2;
  optional Result result = 3;
  optional string characterId = 4;
  optional string buildObjectId = 5;
  optional string playerSkillId = 6;
}
 
local_persistent_message Character {
  required string id = 1;
  optional string umaData = 2;
  optional int32 recordId = 4;
  required string playerId = 5;
  optional int32 part = 6;
  optional int32 parts = 7;
  optional int32 worldx = 8;
  optional int32 worldy = 9;
  optional int32 worldz = 10;
  optional Zone zone = 11;
  optional bool includeUmaData = 12;
  optional int32 level = 14;
  optional Vitals.Template vitalsTemplate = 15;
  optional string gameEntityPrefab = 16;
  optional string region = 17;
  optional string itemSlotData = 18;
  optional string guildId = 19;
  optional string bindPoint = 20;
  optional Factions.Faction faction = 22;
  optional string ownerId = 23;
  optional string firstName = 24;
  optional string lastName = 25;
  optional string groupId = 26;
}

local_message Factions {
  enum Faction {
    None = 0;
    Civilian = 1;
    Bandit = 2;
    Guard = 3;
  }
  optional Faction faction = 1;
}

local_persistent_message FactionStanding {
  enum Type {
    FactionToFaction = 0;
    CharacterToFaction = 1;
    CharacterToCharacter = 2;
  }
  
  optional Factions.Faction me = 1;
  optional Factions.Faction them = 2;
  optional float standing = 3;
  optional string id = 4;
  optional string meCharacterId = 5;
  optional string themCharacterId = 6;
  optional Type type = 7;
  optional int32 recordId = 8;
}


local_message FactionStandings {
  repeated FactionStanding standings = 1;
}


local_message ItemSlots {
  repeated ItemSlot itemSlots = 1;
}

local_message ItemSlot {
  optional string playerItemId = 1;
  optional PlayerItem.Slot slot = 2;
  optional string slotId = 3;
  optional string playerItemName = 4;
}

local_message CharacterUpdate {
  optional Character character = 1;
}

local_message Characters {
  repeated Character characters = 1;
  optional string id = 2;
}

message PvpGameMessage {
  optional Character character = 1;
  optional Characters characters = 2;
  optional int32 command = 3;
}

local_message UseSkill {
  required string id = 1;
  optional string targetId = 2;
  optional GmVector3 location = 3;
  optional GmVector3 direction = 4;
}

local_message UseItem {
  required string id = 1;
  optional string targetId = 2;
  optional string action = 3;
  required string playerId = 4;
}

local_message StatusEffectTarget {
  enum Action {
    None = 0;
    Apply = 1;
    Remove = 2;
  }
  enum PassiveFlag {
    NA = 0;
    AutoRemove = 1;
    ManualRemove = 2;
  }
 
  required string targetEntityId = 1;
  optional GmVector3 location = 3;
  repeated StatusEffect statusEffect = 5;
  required string originCharacterId = 6;
  optional int64 activeId = 8;
  optional int64 lastTick = 9;
  required Action action = 10;
  required PassiveFlag passiveFlag = 11;
  optional string originEntityId = 12;
  optional SkillRequest skillRequest = 13;
}


local_message GmTarget {
  enum Type {
  	None = 0;
    Block = 1;
    GameEntity = 2;
    Tree = 3;
    Flag = 4;
    Ground = 5;
    Location = 6;
    Boat = 7;
    Vehicle = 8;
    Npc = 9;
  }
  
  optional Type type = 1;
  optional string gameObjectId = 2;
  optional string characterId = 3;
  optional string blockId = 4;
  optional GmVector3 location = 5;
  optional string ownerId = 6;
  optional string displayName = 7;
  optional string vehicleId = 8;
}

local_message SkillRequest {
  enum TargetType {
    None = 0;
    Character = 1;
    Object = 2;
    BuildObject = 3;
    Boat = 4;
    Vehicle = 5;
  }
 
  optional string attackerCharacterId = 1;
  optional string targetId = 2;
  required PlayerSkill playerSkill = 3;
  optional GmVector3 targetLocation = 4;
  optional TargetType targetType = 5;
  optional GmTarget target = 6;
  optional bool relayOnly = 7;
  optional string originEntityId = 8;
  optional string playerSkillId = 9;
}


local_message Harvest {
  required string id = 1;
  optional int32 result = 2;
  optional int64 harvestedAt = 3;
  optional string characterId = 4;
  optional string itemId = 5;
}

local_message CraftItem {
  optional CraftableItem craftableItem = 1;
  optional int32 result = 2;
  optional string characterId = 3;
  optional int32 craftedQuantity = 4;
  optional string craftedId = 5;
}

persistent_message Player {
  enum Role {
    Player = 0;
    AgentController = 1;
    Admin = 2;
    Npc = 3;
    System = 4;
  }
  
  required string id = 1;
  optional bool authenticated = 2;
  optional int32 authtoken = 3;
  optional string passwordHash = 4;
  optional string gameId = 5;
  optional int32 recordId = 6;
  optional Role role = 7;
  optional bool locked = 8;
  optional int32 ip = 9;
  optional int64 ipChangedAt = 10;
  optional string characterId = 11;
  repeated Character characters = 12;
  optional bool assignedUnityInstance = 13;
  optional bool assigned = 14;
}

message TrackData {
  optional sint32 ix = 1;
  optional sint32 iy = 2;
  optional sint32 iz = 3;
  
  optional string id = 4;
  optional sint32 x = 5;
  optional sint32 y = 6;
  optional sint32 z = 7;

  optional DynamicMessage dynamicMessage = 8;
  optional string gridName = 9;
  optional int32 getNeighbors = 10;
  enum EntityType {
    None = 0;
    Any = 1;
    Player = 2;
    Npc = 3;
    Object = 4;
    All = 5;
    BuildObject = 6;
    Vehicle = 7;
    Boat = 8;
    AllPlayers = 9;
  }
  optional EntityType neighborEntityType = 11;
  required EntityType entityType = 12;

  
  optional int32 shortId = 13;
  optional UserDefinedData userDefinedData = 14;
  optional int32 broadcast = 15;
  optional string characterId = 16;
  optional sint32 rx = 17;
  optional sint32 ry = 18;
  optional sint32 rz = 19;
  optional sint32 rw = 20;
  optional int32 vaxis = 21;
  optional int32 haxis = 22;
  optional int32 speed = 23;
  optional float velX = 24;
  optional float velZ = 25;
  optional int32 hidden = 27;
  optional int32 yaxis = 28;
  optional int32 doNotSet = 29;
}

local_message UserDefinedData {
  optional int32 command = 1;
  optional int32 value = 2;
  optional int32 userdefInt2 = 3;
  optional int32 userdefInt3 = 4;
  optional int32 userdefInt4 = 5;
  optional int32 userdefInt5 = 6;
  optional int32 userdefInt6 = 7;
  optional int32 userdefInt7 = 8;
  optional int32 userdefInt8 = 9;
  optional int32 userdefInt9 = 10;
  optional int32 userdefInt1 = 11;
  optional int32 rx = 12;
  optional int32 ry = 13;
  optional int32 rz = 14;
  optional int32 rw = 15;
  optional sint32 x = 16;
  optional sint32 y = 17;
  optional sint32 z = 18;
  
  optional int32 userdefInt10 = 19;
  optional int32 userdefInt11 = 20;
  optional int32 userdefInt12 = 21;
  optional int32 userdefInt13 = 22;
  optional int32 userdefInt14 = 23;
  optional int32 userdefInt15 = 24;
}

local_message DataRequest {
  required string requester = 1;
  required string name = 2;
}

local_message TimeCycle {
  optional float currentTime = 1;
  optional float dayCycleLength = 2;
}
	


message DynamicMessage {
  required string type = 1;
  required bytes message = 2;
}

local_message UnityObject {
  optional string path = 1;
  optional string uuid = 2;
  optional string name = 3;
}

local_persistent_message PlayerSkill {
  enum Category {
    SingleTarget = 0;
	Aoe = 1;
	Pbaoe = 2;
	Self = 3;
	AoeDot = 4;
  }
 
 
  enum WeaponType {
    None = 0;
    Arrow = 1;
    Bullet = 2;
    MagicProjectile = 3;
    SiegeProjectile = 4;
    Melee = 5;
    Magic = 6;
    Siege = 7;
    Tool = 8;
   }
   
   enum ProjectileBehavior {
     StopOnFirstHit = 0;
     ContinueOnPlayerHit = 1;
   }
   
  required string id = 1;
  optional int32 recordId = 3;
  optional string icon_path = 6;
  optional string description = 7;
  required string characterId = 10;
  
  optional string statusEffectId = 13;
  
  optional int32 isComboPart = 16;
  optional int32 isPassive = 17;
  optional string icon_uuid = 19;
  optional string statusEffects = 20;
  optional Category category = 22;
  
  optional UnityObject useEffect = 29;
  optional UnityObject icon = 30;
  optional UnityObject useSound = 32;
  
  optional UnityObject projectile = 34;
  optional int32 range = 35;
  optional WeaponType weaponType = 36;
  
  optional UnityObject hitEffect = 37;
  optional ProjectileBehavior projectileBehavior = 38;
  optional bool targetCircle = 39;
  optional float maxLevel = 40;
  optional float level = 41;
  optional float delay = 42;
}



message PlayerSkills {
  repeated PlayerSkill playerSkill = 1;
}

local_persistent_message CraftableItem {
  required string id = 1;
  optional string item1 = 2;
  optional int32 item1_quantity = 3;
  optional string item2 = 4;
  optional int32 item2_quantity = 5;
  optional string item3 = 6;
  optional int32 item3_quantity = 7;
  optional string item4 = 8;
  optional int32 item4_quantity = 9;
  optional int32 recordId = 10;
}

local_message CraftingRecipes {
  repeated CraftingRecipe craftingRecipes = 1;
  required string itemCatalog = 2;
}

local_message CraftingReward {
  required string id = 1;
  required int32 quantity = 2;
  required int32 level = 3;
}

local_message CraftingRecipe {
  required string id = 1;
  repeated CraftingElement elements = 2;
  optional CraftingTool tool = 3;
  required bool orderMatters = 4;
  required float timeToComplete = 5;
  repeated CraftingReward rewards = 6;
  required int32 maxUses = 7;
  required bool active = 8;
}

local_message CraftingTool {
  required string id = 1;
  required int32 level = 2;
}

local_message CraftingElement {
  required string id = 1;
  required int32 quantity = 2;
  required int32 level = 3;
  required int32 order = 4;
}

// Inventory messages

local_persistent_message PlayerItem {

  enum Category {
    None = 0;
    Currency = 1;
    Trinket = 2;
    Armor = 3;
    Weapon = 4;
    Consumable = 5;
    CraftingResource = 6;
    Tool = 7;
    BuildingBlock = 8;
    GroundBlock = 9;
    Container = 10;
    Projectile = 11;
    Boat = 12;
    Vehicle = 13;
  }
  
  enum WeaponType {
    OneHanded = 0;
    TwoHanded = 1;
  }
  
  enum Slot {
    NoSlot = 0;
    Shoulder = 1;
    Chest = 2;
    Waist = 3;
    Head = 4;
    Hands = 5;
    Legs = 6;
    Feet = 7;
    Accessory = 8;
    WeaponMain = 9;
    WeaponOff = 10;
  }
  
  required string id = 1;
  required string name = 2;
  required int32 quantity = 3;
  optional string color = 4;
  optional bool weapon = 5;
  optional Cost cost = 8;
  optional string playerId = 9;
  optional int32 recordId = 10;
  optional int32 harvestable = 12;
  optional int32 craftingResource = 13;
  optional int32 craftable = 14;
  optional bool isConsumable = 16;
  optional int32 type = 17;
  optional int32 maxHealth = 18;
  optional int32 health = 19;
  optional int32 level = 20;
  optional string characterId = 21;
  optional string containerId = 22;
  optional int32 updatedAt = 23;
  
  optional string locationId = 25;
  optional int32 slotCount = 26;
  optional bool stackable = 27;
  optional string locationType = 28;
  optional int32 stackMax = 29;
  optional int32 containerSlot = 30;
  optional string icon_uuid = 31;
  optional string icon_path = 32;
  optional string referenceId = 33;
  required bool hidden = 34;
  optional int32 maxQuantity = 35;
  required bool active = 36;
  required float weight = 37;
  optional int32 templateBlockId = 38;
  
  optional Category category = 41;
  optional UnityObject icon = 43;
  
  optional bool equipped = 50;
  optional Slot slot = 51;
  optional WeaponType weaponType = 52;
}

local_message ModelInfo {
  optional float attachX = 1;
  optional float attachY = 2;
  optional float attachZ = 3;
  optional float rotateX = 4;
  optional float rotateY = 5;
  optional float rotateZ = 6;
  optional float scaleX = 7;
  optional float scaleY = 8;
  optional float scaleZ = 9;
  optional string resource = 10;
  optional string prefab = 11;
  optional string weapon_type = 12;
}

local_message Cost {
  required float amount = 1;
  optional string currency = 2;
}

local_message Consumable {
  required string type = 1;
  required string size = 2;
}

local_message Weapon {
  required int32 attack = 1;
  required int32 delay = 2;
}

local_message RequestPlayerItems {
  optional bool catalog = 1;
  optional string characterId = 2;
  optional int32 result = 3;
  optional PlayerItems playerItems = 4;
  optional string query = 5;
}

message PlayerItems {
  optional bool catalog = 1;
  repeated PlayerItem playerItem = 2;
}

local_message UpdatePlayerItem {
  optional int32 result = 1;
  optional PlayerItem playerItem = 2;
}

local_message AddPlayerItem {
  required string id = 1;
  optional int32 quantity = 2;
  optional int32 result = 3;
  optional string characterId = 4;
  optional PlayerItem playerItem = 5;
  optional string containerId = 6;
}

local_message RemovePlayerItem {
  required string id = 1;
  required int32 quantity = 2;
  optional int32 result = 3;
  optional string characterId = 4;
}

message Players {
  repeated Player player = 1;
}
  
// For testing
persistent_message TestObject {
  required string id = 12;
  optional string optionalString = 1;
  required string requiredString = 2;
  repeated int32 numbers = 3;
  optional bytes bstring = 4;
  optional bool bvalue = 5;
  optional double dvalue = 6;
  optional float fvalue = 7;
  optional int64 numbers64 = 8;
  repeated Player player = 9;
  optional int32 recordId = 10;
  
}

message UnityGameMessage {
  enum MessageType {
  	None = 0;
    Ask = 1;
    Register = 2;
    Tell = 3;
  }
  
  required MessageType messageType = 1;
  optional GameMessage gameMessage = 2;
  optional int64 messageId = 3;
  optional string playerId = 4;
  optional string actorName = 5;
  
}

local_message Zone {
  required string name = 1;
  required int32 number = 2;
  required string region = 3;
  required string hostname = 4;
  optional bool isPublic = 5;
  repeated string playerIds = 6;
}

local_message Zones {
  repeated Zone zone = 1;
  optional Zone current = 2;
}

local_message Region {
  enum Status {
		NONE = 0;
		UP = 1;
		DOWN = 2;
		REQUEST_UP = 3;
		REQUEST_DOWN = 4;
	}
	optional string id = 1;
	optional Status status = 2;
	optional string name = 3;
	optional string unityClient = 4;
}

local_persistent_message RegionInfo {
  required string id = 1;
  optional int32 recordId = 2;
  optional string node = 3;
  optional bool assigned = 5;
  optional int32 number = 6;
  optional string hostname = 7;
}

local_message RegionInfos {
  optional string id = 1;
  repeated RegionInfo regionInfo = 2;
  optional string playerRegion = 3;
}


local_message ProcessCommand {
  enum Action {
    None = 0;
    Start = 1;
    Stop = 2;
    Restart = 3;
  }
  
  required Action action = 1;
  optional string startScript = 2;
  optional string executable = 3;
}


local_message UnityInstanceData {
  optional string scene = 1;
  optional string role = 2;
 }

local_message UnityInstanceStatus {
  enum State {
    None = 0;
    Idle = 1;
    Running = 2;
  }
  
  required string name = 1;
  required State state = 2;
  optional int32 recordId = 3;
  optional Zone zone = 4;
  required State requestedState = 5;
  optional string playerId = 6;
  optional UnityInstanceData data = 7;
}

message GameMessage {
  // Used internally, do not change
  optional string playerId = 1;
  optional string messageId = 2;
  optional int32 destinationId = 3;
  optional string destination = 4;
    
  // User modifiable
  optional PlayerItems playerItems = 5;
  optional PlayerSkills playerSkills = 6;
  optional Vitals vitals = 7;
  optional SkillRequest skillRequest = 8;
  optional StatusEffect statusEffect = 9;
  optional SiegeCommand siegeCommand = 10;
  optional TimeCycle timeCycle = 11;
  optional BuildObjects buildObjects = 12;
  optional BuildableAreas buildableAreas = 13;
  optional GmStats gmStats = 14;
  optional Region region = 15;
  
  optional VitalsContainer vitalsContainer = 16;
  optional ProcessCommand processCommand = 17;
  optional UnityInstanceStatus unityInstanceStatus = 18;
  optional CharacterUpdate characterUpdate = 19;
  optional VitalsUpdateContainer vitalsUpdateContainer = 20;
  optional VitalsRequest vitalsRequest = 21;
  optional BuildObjectGroup buildObjectGroup = 22;
  optional CombatLog combatLog = 23;
  optional string agentId = 24;
  optional FactionStanding factionStanding = 25;
  optional FactionStandings factionStandings = 26;
  optional BoatAction boatAction = 27;
  optional NpcRequest npcRequest = 28;
}

message GameMessages {
  repeated GameMessage gameMessage = 1;
}