

import "lib/rpc/rpc.proto";
import "lib/protocol/entity.proto";
import "lib/protocol/attribute.proto";
import "service/toon/toon.proto";
package bnet.protocol.toon.external;

option cc_generic_services = true;

message ToonListRequest {
}

message ToonListResponse {
  repeated .bnet.protocol.EntityId toons = 2;
}

message SelectToonRequest {
  required .bnet.protocol.EntityId toon = 1;
}

message SelectToonResponse {
}

message CreateToonRequest {
  optional string name = 1;
  repeated .bnet.protocol.attribute.Attribute attribute = 2;
}

message CreateToonResponse {
  optional .bnet.protocol.EntityId toon = 2;
}

message DeleteToonRequest {
  required .bnet.protocol.EntityId toon = 1;
}

message DeleteToonResponse {
}

service ToonServiceExternal {
  rpc ToonList(.bnet.protocol.toon.external.ToonListRequest) returns (.bnet.protocol.toon.external.ToonListResponse);
  rpc SelectToon(.bnet.protocol.toon.external.SelectToonRequest) returns (.bnet.protocol.toon.external.SelectToonResponse);
  rpc CreateToon(.bnet.protocol.toon.external.CreateToonRequest) returns (.bnet.protocol.toon.external.CreateToonResponse);
  rpc DeleteToon(.bnet.protocol.toon.external.DeleteToonRequest) returns (.bnet.protocol.toon.external.DeleteToonResponse);
}

