// Copyright 2015 Rhythm & Hues Studios.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package louie;

option java_package = "com.rhythm.pb";
option java_outer_classname = "RequestProtos";
option java_generate_equals_and_hash = true;

message RequestHeaderPB {
    optional string user  = 1 [deprecated=true];
    optional string agent = 2;
    optional uint32 count = 3;

    optional SessionKey   key       = 10;
    optional IdentityPB   identity  = 11; // set on initial request, thereafter requests should use the key that would have come back in the initial ResponsePB

    repeated RoutePB route    = 20 [deprecated=true];

    optional string routeUser = 30 [deprecated=true];
}

message RoutePB {
    optional string hostIp     = 1;
    optional string gateway    = 2;
    optional string service    = 3;
    optional string variant    = 4;
}

message RoutePathPB {
    optional RoutePB route = 1;
    repeated RoutePathPB path = 2;
}

message IdentityPB {
    optional string user             = 1;
    optional string language         = 2;
    optional string program          = 3;
  
    optional string path             = 4;
    optional string location         = 5;
    optional string machine          = 6;
    optional string env              = 7;
    optional string ip               = 8;

    optional string languageVersion  = 9;
    optional string programVersion   = 10;
    optional string os               = 11;
    optional string osVersion        = 12;

    optional string processId        = 13;
}

message SessionKey {
    optional string key = 1;
}

message SessionBPB {
    optional SessionKey      key        = 1;
    optional IdentityPB      identity   = 2;
    optional SessionStatsPB  stats      = 3;
}

message SessionStatsPB {
    optional sint32    requestCount     = 1;
    optional uint64    createTime       = 2;
    optional uint64    lastRequestTime  = 3;
}

message RequestPB {
    optional uint32 id           = 1;
    optional string service      = 2;
    optional string method       = 3;
    repeated string type         = 4;
    optional uint32 param_count  = 5 [deprecated=true];

    repeated RoutePB route    = 20;
    optional string routeUser = 21;
    optional sint64 threadId  = 22;
    optional sint64 start_time = 23;
}

message ResponseHeaderPB {
    optional uint32         count   = 1;
    optional SessionKey     key     = 2;
    repeated InfoPB         info    = 3;
}

message ResponsePB {
    optional uint32 id      = 1;
    optional uint32 count   = 2;
    optional string type   = 3;
    optional ErrorPB error = 4;

    repeated RoutePathPB route = 20;
}

message ErrorPB {
    optional uint32 code = 1;
    optional string type = 2;
    optional string description = 3;
}

message InfoPB {
    optional string     key     = 1;
    optional string     value   = 2;
}