syntax = "proto3";
package ds3ext;

message EquipParamWeapon {
  int32 Id = 1;
  uint32 BehaviorVariationId = 2;
  uint32 SortId = 3;
  sint32 WanderingEquipId = 4;
  float Weight = 5;
  sint32 WeaponWeightRate = 6;
  sint32 FixPrice = 7;
  sint32 BasicPrice = 8;
  sint32 SellValue = 9;
  float CorrectStrength = 10;
  float CorrectAgility = 11;
  float CorrectMagic = 12;
  float CorrectFaith = 13;
  float PhysGuardCutRate = 14;
  float MagGuardCutRate = 15;
  float FireGuardCutRate = 16;
  float ThunGuardCutRate = 17;
  sint32 SpEffectBehaviorId1 = 18;
  sint32 SpEffectBehaviorId2 = 19;
  sint32 SpEffectBehaviorId3 = 20;
  sint32 ResidentSpEffectId1 = 21;
  sint32 ResidentSpEffectId2 = 22;
  sint32 ResidentSpEffectId3 = 23;
  sint32 MaterialSetId = 24;
  sint32 OriginEquipWep = 25;
  sint32 OriginEquipWep1 = 26;
  sint32 OriginEquipWep2 = 27;
  sint32 OriginEquipWep3 = 28;
  sint32 OriginEquipWep4 = 29;
  sint32 OriginEquipWep5 = 30;
  sint32 OriginEquipWep6 = 31;
  sint32 OriginEquipWep7 = 32;
  sint32 OriginEquipWep8 = 33;
  sint32 OriginEquipWep9 = 34;
  sint32 OriginEquipWep10 = 35;
  sint32 OriginEquipWep11 = 36;
  sint32 OriginEquipWep12 = 37;
  sint32 OriginEquipWep13 = 38;
  sint32 OriginEquipWep14 = 39;
  sint32 OriginEquipWep15 = 40;
  float AntiDemonDamageRate = 41;
  float AntSaintDamageRate = 42;
  float AntWeakA_DamageRate = 43;
  float AntWeakB_DamageRate = 44;
  sint32 VagrantItemLotId = 45;
  sint32 VagrantBonusEneDropItemLotId = 46;
  sint32 VagrantItemEneDropItemLotId = 47;
  uint32 EquipModelId = 48;
  uint32 IconId = 49;
  sint32 Durability = 50;
  sint32 MaxDurability = 51;
  sint32 ParryDamageLife = 52;
  uint32 AttackThrowEscape = 53;
  sint32 AttackBasePhysics = 54;
  sint32 AttackBaseMagic = 55;
  sint32 AttackBaseFire = 56;
  sint32 AttackBaseThunder = 57;
  sint32 AttackBaseStamina = 58;
  sint32 AttackBasePoise = 59;
  sint32 SaDurability = 60;
  sint32 GuardAngle = 61;
  sint32 Stability = 62;
  sint32 ReinforceTypeId = 63;
  sint32 TrophySGradeId = 64;
  sint32 ThrophySeqId = 65;
  sint32 ThrowAtkRate = 66;
  sint32 BowDistRate = 67;
  uint32 EquipModelCategory = 68;
  uint32 EquipModelGender = 69;
  uint32 WeaponCategory = 70;
  uint32 MotionCategory = 71;
  uint32 GuardMotionCategory = 72;
  uint32 AtkMaterial = 73;
  uint32 DefMaterial = 74;
  uint32 DefSfxMaterial = 75;
  uint32 PhysicsStatFunc = 76;
  uint32 SpAttribute = 77;
  uint32 ProperStrength = 78;
  uint32 ProperAgility = 79;
  uint32 ProperMagic = 80;
  uint32 ProperFaith = 81;
  uint32 OverStrength = 82;
  uint32 AttackBaseParry = 83;
  uint32 DefenseBaseParry = 84;
  uint32 GuardBaseRepel = 85;
  uint32 AttackBaseRepel = 86;
  uint32 GuardCutCancelRate = 87;
  uint32 GuardLevel = 88;
  uint32 SlashGuardCutRate = 89;
  uint32 BlowGuardCutRate = 90;
  uint32 ThrustGuardCutRate = 91;
  uint32 PoisonGuardResist = 92;
  uint32 DiseaseGuardResist = 93;
  uint32 BloodGuardResist = 94;
  uint32 CurseGuardResist = 95;
  uint32 IsDurabilityDivergence = 96;
  uint32 MagicStatFunc = 97;
  uint32 FireStatFunc = 98;
  uint32 ThunderStatFunc = 99;
  sint32 AttackBaseDark = 100;
  uint32 DarkStatFunc = 101;
  uint32 PoisonStatFunc = 102;
  uint32 BleedStatFunc = 103;
  uint32 ProperLuck = 104;
  uint32 WeaponArt = 105;
  float CorrectLuck = 106;
  sint32 WeaponClass = 107;
  sint32 AecpId = 108;
}

message EquipParamAccessory {
  int32 Id = 1;
  sint32 RefId = 2;
  sint32 SfxVariationId = 3;
  float Weight = 4;
  sint32 BehaviorId = 5;
  sint32 BasicPrice = 6;
  sint32 SellValue = 7;
  sint32 SortId = 8;
  sint32 QwcId = 9;
  sint32 EquipModelId = 10;
  sint32 IconId = 11;
  sint32 ShopLv = 12;
  sint32 TrophySGradeId = 13;
  sint32 ThrophySeqId = 14;
  uint32 EquipModelCategory = 15;
  uint32 EquipModelGender = 16;
  uint32 AccessoryCategory = 17;
  uint32 RefCategory = 18;
  uint32 SpEffectCategory = 19;
}

message EquipParamProtector {
  int32 Id = 1;
  sint32 SortId = 2;
  sint32 WanderingEquipId = 3;
  sint32 VagrantItemLotId = 4;
  sint32 VagrantBonusEneDropItemLotId = 5;
  sint32 VagrantItemEneDropItemLotId = 6;
  sint32 FixPrice = 7;
  sint32 BasicPrice = 8;
  sint32 SellValue = 9;
  float Weight = 10;
  sint32 ResidentSpEffectId1 = 11;
  sint32 ResidentSpEffectId2 = 12;
  sint32 ResidentSpEffectId3 = 13;
  sint32 MaterialSetId = 14;
  float PartsDamageRate = 15;
  sint32 ResistPoison = 16;
  sint32 ResistToxic = 17;
  sint32 ResistBlood = 18;
  uint32 ResistCurse = 19;
  float DefensePhysics = 20;
  float DefenseSlash = 21;
  float DefenseStrike = 22;
  float DefenseThrust = 23;
  float DefenseMagic = 24;
  float DefenseFire = 25;
  float DefenseThunder = 26;
  sint32 EquipModelId = 27;
  sint32 KnockbackBounceRate = 28;
  sint32 Durability = 29;
  sint32 DurabilityMax = 30;
  uint32 SaDurability = 31;
  float Poise = 32;
  float DefenseDark = 33;
  sint32 ResistFrost = 34;
}

message ReinforceParamWeapon {
  int32 Id = 1;
  float PhysicsAtkRate = 2;
  float MagicAtkRate = 3;
  float FireAtkRate = 4;
  float ThunderAtkRate = 5;
  float StaminaAtkRate = 6;
  float SaWeaponAtkRate = 7;
  float SaDurabilityRate = 8;
  float CorrectStrengthRate = 9;
  float CorrectAgilityRate = 10;
  float CorrectMagicRate = 11;
  float CorrectFaithRate = 12;
  float PhysicsGuardCutRate = 13;
  float MagicGuardCutRate = 14;
  float FireGuardCutRate = 15;
  float ThunderGuardCutRate = 16;
  float PoisonGuardResistRate = 17;
  float DiseaseGuardResistRate = 18;
  float BloodGuardResistRate = 19;
  float CurseGuardResistRate = 20;
  float StaminaGuardDefRate = 21;
  uint32 SpEffectId1 = 22;
  uint32 SpEffectId2 = 23;
  uint32 SpEffectId3 = 24;
  uint32 ResidentSpEffectId1 = 25;
  uint32 ResidentSpEffectId2 = 26;
  uint32 ResidentSpEffectId3 = 27;
  uint32 MaterialSetId1 = 28;
  uint32 MaterialSetId2 = 29;
  float DarkAtkRate = 30;
  float DarkGuardResistRate = 31;
  float CorrectLuckRate = 32;
}

message AttackElementCorrectParam {
  int32 Id = 1;
  sint32 Bitmask = 2;
  sint32 v0 = 3;
  sint32 v1 = 4;
  sint32 v2 = 5;
  sint32 v3 = 6;
  sint32 v4 = 7;
  sint32 v5 = 8;
  sint32 v6 = 9;
  sint32 v7 = 10;
  sint32 v8 = 11;
  sint32 v9 = 12;
  sint32 v10 = 13;
  sint32 v11 = 14;
  sint32 v12 = 15;
  sint32 v13 = 16;
  sint32 v14 = 17;
  sint32 v15 = 18;
  sint32 v16 = 19;
  sint32 v17 = 20;
  sint32 v18 = 21;
  sint32 v19 = 22;
  sint32 v20 = 23;
  sint32 v21 = 24;
  sint32 v22 = 25;
  sint32 v23 = 26;
  sint32 v24 = 27;
  sint32 v25 = 28;
  sint32 v26 = 29;
  sint32 v27 = 30;
  sint32 v28 = 31;
  sint32 v29 = 32;
  sint32 v30 = 33;
  sint32 v31 = 34;
  sint32 v32 = 35;
  sint32 v33 = 36;
  sint32 v34 = 37;
  sint32 v35 = 38;
  sint32 v36 = 39;
  sint32 v37 = 40;
  sint32 v38 = 41;
  sint32 v39 = 42;
  sint32 v40 = 43;
  sint32 v41 = 44;
  sint32 v42 = 45;
  sint32 v43 = 46;
  sint32 v44 = 47;
  sint32 v45 = 48;
  sint32 v46 = 49;
  sint32 v47 = 50;
  sint32 v48 = 51;
  sint32 v49 = 52;
}

message CalcCorrectGraph {
  int32 Id = 1;
  float StageMaxVal0 = 2;
  float StageMaxVal1 = 3;
  float StageMaxVal2 = 4;
  float StageMaxVal3 = 5;
  float StageMaxVal4 = 6;
  float StageMaxGrowVal0 = 7;
  float StageMaxGrowVal1 = 8;
  float StageMaxGrowVal2 = 9;
  float StageMaxGrowVal3 = 10;
  float StageMaxGrowVal4 = 11;
  float AdjPt_maxGrowVal0 = 12;
  float AdjPt_maxGrowVal1 = 13;
  float AdjPt_maxGrowVal2 = 14;
  float AdjPt_maxGrowVal3 = 15;
  float AdjPt_maxGrowVal4 = 16;
  float Init_inclination_soul = 17;
  float Adjustment_value = 18;
  float Boundry_inclination_soul = 19;
  float Boundry_value = 20;
}

message Magic {
  int32 Id = 1;
  sint32 YesNoDialogMessageId = 2;
  sint32 LimitCancelSpEffectId = 3;
  sint32 SortId = 4;
  sint32 RefId = 5;
  sint32 Mp = 6;
  sint32 Stamina = 7;
  sint32 Icon = 8;
  sint32 BehaviorId = 9;
  sint32 MtrlItemId = 10;
  sint32 ReplaceMagicId = 11;
  sint32 MaxQuantity = 12;
  uint32 Humanity = 13;
  uint32 OverDexterity = 14;
  uint32 SfxVariationid = 15;
  uint32 SlotLength = 16;
  uint32 RequirementIntellect = 17;
  uint32 RequirementFaith = 18;
  uint32 AnalogDexterityMin = 19;
  uint32 AnalogDexterityMax = 20;
  uint32 EzStateBehaviorType = 21;
  uint32 RefCategory = 22;
  uint32 SpEffectCategory = 23;
  uint32 RefType = 24;
  uint32 OpmeMenuType = 25;
  uint32 HasSpEffectType = 26;
  uint32 ReplaceCategory = 27;
  uint32 UseLimitCategory = 28;
}

message SpEffectParam {
  int32 Id = 1;
  sint32 IconId = 2;
  float ConditionHp = 3;
  float EffectEndurance = 4;
  sint32 MotionInterval = 5;
  float MaxHpRate = 6;
  float MaxMpRate = 7;
  float MaxStaminaRate = 8;
  float SlashDamageCutRate = 9;
  float BlowDamageCutRate = 10;
  float ThrustDamageCutRate = 11;
  float NeutralDamageCutRate = 12;
  float MagicDamageCutRate = 13;
  float FireDamageCutRate = 14;
  float ThunderDamageCutRate = 15;
  float PhysicsAttackRate = 16;
  float MagicAttackRate = 17;
  float FireAttackRate = 18;
  float ThunderAttackRate = 19;
  float PhysicsAttackPowerRate = 20;
  float MagicAttackPowerRate = 21;
  float FireAttackPowerRate = 22;
  float ThunderAttackPowerRate = 23;
  sint32 PhysicsAttackPower = 24;
  sint32 MagicAttackPower = 25;
  sint32 FireAttackPower = 26;
  sint32 ThunderAttackPower = 27;
  float PhysicsDifferenceRate = 28;
  float MagicDifferenceRate = 29;
  float FireDifferenceRate = 30;
  float ThunderDifferenceRate = 31;
  sint32 PhysicsDifference = 32;
  sint32 MagicDifference = 33;
  sint32 FireDifference = 34;
  sint32 ThunderDifference = 35;
  float NoGuardDamageRate = 36;
  float VitalSpotChangeRate = 37;
  float NormalSpotChangeRate = 38;
  float MaxHpChangeRate = 39;
  sint32 BehaviorId = 40;
  float ChangeHpRate = 41;
  sint32 ChangeHpPoint = 42;
  float ChangeMpRate = 43;
  sint32 ChangeMpPoint = 44;
  sint32 MpRecoverChangeSpeed = 45;
  float ChangeStaminaRate = 46;
  sint32 ChangeStaminaPoint = 47;
  sint32 StaminaRecoverChangeSpeed = 48;
  float MagicEffectTimeChange = 49;
  sint32 InsideDurability = 50;
  sint32 MaxDurability = 51;
  sint32 PoisonAttackPower = 52;
  sint32 RegistIllness = 53;
  sint32 BloodAttackPower = 54;
  sint32 RegistCurse = 55;
  float FallDamageRate = 56;
  float SoulRate = 57;
  float EquipWeightChangeRate = 58;
  float AllItemWeightChangeRate = 59;
  sint32 Soul = 60;
  sint32 AnimidOffset = 61;
  float HaveSoulRate = 62;
  float TargetPriority = 63;
  sint32 SightSearchEnemyCut = 64;
  float HearingSearchEnemyCut = 65;
  float GrabityRate = 66;
  float RegistPoisonChangeRate = 67;
  float RegistToxicChangeRate = 68;
  float RegistBloodChangeRate = 69;
  float RegistCurseChangeRate = 70;
  float SoulStealRate = 71;
  float LifeReductionRate = 72;
  float HpRecoverRate = 73;
  sint32 ReplaceSpEffectId = 74;
  sint32 CycleOccurrenceSpEffectId = 75;
  sint32 AtkOccurrenceSpEffectId = 76;
  float GuardDefFlickPowerRate = 77;
  float GuardStaminaCutRate = 78;
  sint32 RayCastPassedTime = 79;
  sint32 ChangeSuperArmorPoint = 80;
  sint32 BowDistRate = 81;
  uint32 SpCategory = 82;
  uint32 CategoryPriority = 83;
  sint32 SaveCategory = 84;
  uint32 ChangeMagicSlot = 85;
  uint32 ChangeMiracleSlot = 86;
  sint32 HeroPointDamage = 87;
  uint32 DefFlickPower = 88;
  uint32 FlickDamageCutRate = 89;
  uint32 BloodDamageRate = 90;
  sint32 DmgLv_None = 91;
  sint32 DmgLv_S = 92;
  sint32 DmgLv_M = 93;
  sint32 DmgLv_L = 94;
  sint32 DmgLv_BlowM = 95;
  sint32 DmgLv_Push = 96;
  sint32 DmgLv_Strike = 97;
  sint32 DmgLv_BlowS = 98;
  sint32 DmgLv_Min = 99;
  sint32 DmgLv_Uppercut = 100;
  sint32 DmgLv_BlowLL = 101;
  sint32 DmgLv_Breath = 102;
  uint32 AtkAttribute = 103;
  uint32 SpAttribute = 104;
  uint32 StateInfo = 105;
  uint32 WepParamChange = 106;
  uint32 MoveType = 107;
  uint32 LifeReductionType = 108;
  uint32 ThrowCondition = 109;
  sint32 AddBehaviorJudgeId_condition = 110;
  uint32 AddBehaviorJudgeId_add = 111;
  uint32 StrangeEnum = 112;
  sint32 FrostAttackPower = 113;
}

message NpcParam {
  int32 Id = 1;
  sint32 BehaviorVariationId = 2;
  sint32 AiThinkId = 3;
  sint32 NameId = 4;
  float TurnVelocity = 5;
  float HitHeight = 6;
  float HitRadius = 7;
  uint32 Weight = 8;
  float HitYOffset = 9;
  uint32 Hp = 10;
  uint32 Mp = 11;
  uint32 GetSoul = 12;
  sint32 ItemLotId_1 = 13;
  sint32 ItemLotId_2 = 14;
  sint32 ItemLotId_3 = 15;
  sint32 ItemLotId_4 = 16;
  sint32 ItemLotId_5 = 17;
  sint32 ItemLotId_6 = 18;
  sint32 HumanityLotId = 19;
  sint32 SpEffectID0 = 20;
  sint32 SpEffectID1 = 21;
  sint32 SpEffectID2 = 22;
  sint32 SpEffectID3 = 23;
  sint32 SpEffectID4 = 24;
  sint32 SpEffectID5 = 25;
  sint32 SpEffectID6 = 26;
  sint32 SpEffectID7 = 27;
  sint32 GameClearSpEffectID = 28;
  float PhysGuardCutRate = 29;
  float MagGuardCutRate = 30;
  float FireGuardCutRate = 31;
  float ThunGuardCutRate = 32;
  sint32 AnimIdOffset = 33;
  sint32 MoveAnimId = 34;
  sint32 SpMoveAnimId1 = 35;
  sint32 SpMoveAnimId2 = 36;
  float NetworkWarpDist = 37;
  sint32 DbgBehaviorR1 = 38;
  sint32 DbgBehaviorL1 = 39;
  sint32 DbgBehaviorR2 = 40;
  sint32 DbgBehaviorL2 = 41;
  sint32 DbgBehaviorRL = 42;
  sint32 DbgBehaviorRR = 43;
  sint32 DbgBehaviorRD = 44;
  sint32 DbgBehaviorRU = 45;
  sint32 DbgBehaviorLL = 46;
  sint32 DbgBehaviorLR = 47;
  sint32 DbgBehaviorLD = 48;
  sint32 DbgBehaviorLU = 49;
  sint32 AnimIdOffset2 = 50;
  float PartsDamageRate1 = 51;
  float PartsDamageRate2 = 52;
  float PartsDamageRate3 = 53;
  float PartsDamageRate4 = 54;
  float PartsDamageRate5 = 55;
  float PartsDamageRate6 = 56;
  float PartsDamageRate7 = 57;
  float PartsDamageRate8 = 58;
  float WeakPartsDamageRate = 59;
  float SuperArmorRecoverCorrection = 60;
  float SuperArmorBrakeKnockbackDist = 61;
  uint32 Stamina = 62;
  uint32 StaminaRecoverBaseVel = 63;
  sint32 Def_phys = 64;
  sint32 Def_slash = 65;
  sint32 Def_blow = 66;
  sint32 Def_thrust = 67;
  sint32 Def_mag = 68;
  sint32 Def_fire = 69;
  sint32 Def_thun = 70;
  uint32 DefFlickPower = 71;
  uint32 ResistPoison = 72;
  uint32 ResistDisease = 73;
  uint32 ResistBleed = 74;
  uint32 ResistCurse = 75;
  sint32 GhostModelId = 76;
  sint32 NormalChangeResourceId = 77;
  sint32 GuardAngle = 78;
  sint32 SlashGuardCutRate = 79;
  sint32 BlowGuardCutRate = 80;
  sint32 ThrustGuardCutRate = 81;
  sint32 SuperArmorDurability = 82;
  sint32 NormalChangeTexChrId = 83;
  uint32 DropType = 84;
  uint32 KnockbackRate = 85;
  uint32 KnockbackParamId = 86;
  uint32 FallDamageDump = 87;
  uint32 StaminaGuardDef = 88;
  uint32 PcAttrB = 89;
  uint32 PcAttrW = 90;
  uint32 PcAttrL = 91;
  uint32 PcAttrR = 92;
  uint32 AreaAttrB = 93;
  uint32 AreaAttrW = 94;
  uint32 AreaAttrL = 95;
  uint32 AreaAttrR = 96;
  uint32 MpRecoverBaseVel = 97;
  uint32 FlickDamageCutRate = 98;
  sint32 DefaultLodParamId = 99;
  uint32 DrawType = 100;
  uint32 NpcType = 101;
  uint32 TeamType = 102;
  uint32 MoveType = 103;
  uint32 LockDist = 104;
  uint32 Material = 105;
  uint32 MaterialSfx = 106;
  uint32 Material_weak = 107;
  uint32 MaterialSfx_weak = 108;
  uint32 PartsDamageType = 109;
  uint32 MaxUndurationAng = 110;
  sint32 GuardLevel = 111;
  uint32 BurnSfxType = 112;
  sint32 PoisonGuardResist = 113;
  sint32 DiseaseGuardResist = 114;
  sint32 BloodGuardResist = 115;
  sint32 CurseGuardResist = 116;
  uint32 ParryAttack = 117;
  uint32 ParryDefense = 118;
  uint32 SfxSize = 119;
  uint32 PushOutCamRegionRadius = 120;
  uint32 HitStopType = 121;
  uint32 LadderEndChkOffsetTop = 122;
  uint32 LadderEndChkOffsetLow = 123;
  uint32 BitFields0 = 124;
  uint32 BitFields1 = 125;
  uint32 BitFields2 = 126;
  uint32 BitFields3 = 127;
  uint32 BitFields4 = 128;
  sint32 Def_dark = 129;
  float Phys = 130;
  float Thrust = 131;
  float Strike = 132;
  float Slash = 133;
  float Magic = 134;
  float Fire = 135;
  float Lightning = 136;
  float Dark = 137;
}

message BehaviorParam {
  int32 Id = 1;
  sint32 VariationId = 2;
  sint32 BehaviorJudgeId = 3;
  uint32 EzStateBehaviorType_old = 4;
  uint32 RefType = 5;
  sint32 ReferenceId = 6;
  sint32 SfxVariationId = 7;
  sint32 Stamina = 8;
  sint32 Mp = 9;
  uint32 Category = 10;
  uint32 HeroPoint = 11;
}

message AtkParam {
  int32 Id = 1;
  float Hit0_Radius = 2;
  float Hit1_Radius = 3;
  float Hit2_Radius = 4;
  float Hit3_Radius = 5;
  float KnockbackDist = 6;
  float HitStopTime = 7;
  sint32 SpEffectId0 = 8;
  sint32 SpEffectId1 = 9;
  sint32 SpEffectId2 = 10;
  sint32 SpEffectId3 = 11;
  sint32 SpEffectId4 = 12;
  sint32 Hit0_DmyPoly1 = 13;
  sint32 Hit1_DmyPoly1 = 14;
  sint32 Hit2_DmyPoly1 = 15;
  sint32 Hit3_DmyPoly1 = 16;
  sint32 Hit0_DmyPoly2 = 17;
  sint32 Hit1_DmyPoly2 = 18;
  sint32 Hit2_DmyPoly2 = 19;
  sint32 Hit3_DmyPoly2 = 20;
  uint32 BlowingCorrection = 21;
  uint32 AtkPhysCorrection = 22;
  uint32 AtkMagCorrection = 23;
  uint32 AtkFireCorrection = 24;
  uint32 AtkThunCorrection = 25;
  uint32 AtkStamCorrection = 26;
  uint32 GuardAtkRateCorrection = 27;
  uint32 GuardBreakCorrection = 28;
  uint32 AtkThrowEscapeCorrection = 29;
  uint32 AtkPhys = 30;
  uint32 AtkMag = 31;
  uint32 AtkFire = 32;
  uint32 AtkThun = 33;
  uint32 AtkStam = 34;
  uint32 GuardAtkRate = 35;
  uint32 GuardBreakRate = 36;
  uint32 AtkSuperArmor = 37;
  uint32 AtkThrowEscape = 38;
  uint32 AtkObj = 39;
  sint32 GuardStaminaCutRate = 40;
  sint32 GuardRate = 41;
  sint32 ThrowTypeId = 42;
  uint32 Hit0_hitType = 43;
  uint32 Hit1_hitType = 44;
  uint32 Hit2_hitType = 45;
  uint32 Hit3_hitType = 46;
  uint32 Hit0_Priority = 47;
  uint32 Hit1_Priority = 48;
  uint32 Hit2_Priority = 49;
  uint32 Hit3_Priority = 50;
  uint32 DamageLevel = 51;
  uint32 MapHitType = 52;
  sint32 GuardCutCancelRate = 53;
  uint32 AtkAttribute = 54;
  uint32 SpecialAttributes = 55;
  uint32 AttackType = 56;
  uint32 AtkMaterial = 57;
  uint32 AtkSize = 58;
  uint32 DefMaterial = 59;
  uint32 DefSfxMaterial = 60;
  uint32 HitSourceType = 61;
  uint32 ThrowFlag = 62;
  uint32 BitField = 63;
}

