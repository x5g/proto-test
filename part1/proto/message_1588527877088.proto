package com.core.Message.Model;
//option java_package = "com.core.Message.Model";
option java_outer_classname = "Message";
import "enum.proto";
import "struct.proto";
// ------------- 该文件只存放请求和响应 ----------
/*
 * 1.每个消息上一行用 // messageId:*** 表示其协议号
 * 示例：
 * 		// 登录请求
 * 		// messageId:101
 * 		message CSLogin {
 * 		}
 * 注：messageId那一行必须与消息紧邻(服务端自动生成需要)
 *
 * 2.消息中用到ID，如无特殊说明，通常指其UID(由服务端分配的唯一ID)
 *   templateId,tid 都是指其模版ID (策划填写的excel表中的ID)
 *   如 itemId 是物品的唯一ID; itemTemplateId、itemTid 指物品的模版ID
 *
 * 标记：
 * 1. Deprecated 过时的消息(等待删除)
 * 2. Modify 需要修改的消息
 */

// ------------------------------
// 协议号上行为奇数，下行为偶数，并且成对出现
//上行协议CS开头clent to server
//下行协议SC开头server to clent
// 例如：CSLogin->101 SCLogin->102
//       如果只有一个请求或响应，则另一个成对的号空着
//       BattleReadyReq->301 没有BattleReadyResp，那么302空着
// 协议号分段说明:(每增加新模块就要在下方更新)

// 登录请求
// messageId:101
message CSLogin {
	required string loginUserName = 1;
	optional string loginPassWord = 2;
	optional string sessionKey = 3;
	optional int32 worldid = 4;
}

// 登录响应
// messageId:102
message SCLogin {
	required int32 loginStatus = 1;
}

// 注册
// messageId:103
message CSRegister {
	required string registerUserName = 1;
	required string registerPassword = 2;
}

// 注册返回
// messageId:104
message SCRegister {
	required int32 status = 1;
}


// 服务器列表
// messageId:106
message SCServerList {
	required int32 serverId 	= 1;//服务器id
	required string serverName 	= 2;//服务器名称
	required int32 serverStatus = 3;//服务器状态
	required string serverDes 	= 4;//服务器描述信息
}



// messageId:107
message CSMsg {
	required string username = 1;
	optional string password = 2;
	optional string sessionKey = 3;
	optional int32 worldid = 4;
}

// 登录响应
// messageId:108
message SCMsg {
	required string username = 1;
}