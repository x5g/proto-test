// Copyright 2009 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Protocol buffer used by the pagespeed library rule checkers to
// represent violations, potential savings and recommendations.

syntax = "proto2";

option optimize_for = LITE_RUNTIME;

package pagespeed;

message Savings {
  // DNS requests that could be saved if page was optimized.
  optional int32 dns_requests_saved = 1;

  // Number of request that could be saved if page was optimized.
  optional int32 requests_saved = 2;

  // Download bytes that could be saved if page was optimized.
  optional int32 response_bytes_saved = 3;

  // Number of page reflows that could have been saved by specifying
  // resource dimensions.
  // NOTE: this metric will be removed in an upcoming Page Speed
  // release.
  optional int32 page_reflows_saved = 4;

  // Upload bytes that could be saved if page was optimized.
  optional int32 request_bytes_saved = 5;

  // Number of times resource loading was blocked that could have been
  // saved.
  optional int32 critical_path_length_saved = 6;
}

message InputInformation {
  // Number of resources accessed while rendering the page.
  optional int32 number_resources = 1;

  // Number of hosts among which the page was sharded.
  optional int32 number_hosts = 2;

  // Total server response bytes. Deprecated. Use the type-specific
  // response bytes fields below.
  // optional int64 total_response_bytes = 3;

  // Total client request bytes.
  optional int64 total_request_bytes = 4;

  // Number of static resources accessed while rendering the page.
  optional int32 number_static_resources = 5;

  // Total server response bytes for each resource type. Sum these
  // fields to get the total number of response bytes for all
  // resources.
  optional int64 html_response_bytes = 6;
  optional int64 text_response_bytes = 7;
  optional int64 css_response_bytes = 8;
  optional int64 image_response_bytes = 9;
  optional int64 javascript_response_bytes = 10;
  optional int64 flash_response_bytes = 11;
  optional int64 other_response_bytes = 12;
}

// Base class for result details
// Ids 1000 and above are reserved for custom result details.  All
// custom details must have different ids.
message ResultDetails {
  extensions 1000 to max;
}

// Result detail to store image dimension information.
message ImageDimensionDetails {
  extend ResultDetails {
    // In order to attach it to Result.details
    optional ImageDimensionDetails message_set_extension = 4812135;  // 'Img'
  }

  // Natural dimensions of the image element.
  optional int32 expected_height = 1;
  optional int32 expected_width = 2;

  // Actual dimensions of the displayed image element.
  optional int32 actual_height = 3;
  optional int32 actual_width = 4;
}

// Result detail to store request size breakdown.
message RequestDetails {
  extend ResultDetails {
    // In order to attach it to Result.details
    optional RequestDetails message_set_extension = 5399921;  // 'Req'
  }

  // Length of the requested URL
  optional int32 url_length = 1;

  // Length of Cookie headers
  optional int32 cookie_length = 2;

  // Length of Referer header
  optional int32 referer_length = 3;
}

// Result detail to store image dimension information.
message StylesInBodyDetails {
  extend ResultDetails {
    // In order to attach it to Result.details
    optional StylesInBodyDetails message_set_extension = 5469305;  // 'Sty'
  }

  // The number of inline styles blocks that appear in the body.
  optional int32 num_inline_style_blocks = 1;

  // The URLs of external style sheets that are linked in the body.
  repeated string external_styles = 2;
}

// Result detail to store information about reordering resources in the head.
message ResourceOrderingDetails {
  extend ResultDetails {
    // In order to attach it to Result.details
    optional ResourceOrderingDetails message_set_extension = 5206628;  // 'Ord'
  }

  // Urls of external CSS links that should be moved.
  repeated string out_of_order_external_css = 1;

  // Indices of inline script blocks that should be moved.
  repeated int32 out_of_order_inline_scripts = 2;
}

// Result detail to store information about caching attributes of resources.
message CachingDetails {
  extend ResultDetails {
    optional CachingDetails message_set_extension = 4415843;  // 'Cac'
  }

  // The freshness lifetime of the resource, in milliseconds.
  optional int64 freshness_lifetime_millis = 1;

  // Whether or not a resource is likely a cacheable resource, based
  // on heuristics.
  optional bool is_heuristically_cacheable = 2;
}

// Result detail to store information about a host that should be parallelized.
message ParallelizableHostDetails {
  extend ResultDetails {
    optional ParallelizableHostDetails message_set_extension = 4747123; //'Hos'
  }

  // The host with the most static resources.
  optional string host = 1;
}

message Result {
  // Identifier of rule that produced this result.
  required string rule_name = 1;

  // Potential savings if page was optimized.
  optional Savings savings = 2;

  // Resource urls that were processed to compute this result.
  repeated string resource_urls = 3;

  // Full details about the rule violation.
  optional ResultDetails details = 4;

  // Optimized version of the current resource, if applicable.
  optional bytes optimized_content = 5;

  // Total response size before savings.
  optional int32 original_response_bytes = 6;

  // Total request size before savings.
  optional int32 original_request_bytes = 7;

  // Number of times resource loading was blocked before savings.
  optional int32 original_critical_path_length = 8;

  // MIME type for the optimized version of the current resource, if
  // applicable.
  optional string optimized_content_mime_type = 9;
}

message Version {
  required int32 major = 1;
  required int32 minor = 2;

  // Set to true in official release builds, false for debug/trunk builds.
  required bool official_release = 3;
}

message Results {
  // Set of results.
  repeated Result results = 1;

  // Summary of information about the inputs.
  required InputInformation input_info = 2;

  // Names of all rules that were run.
  repeated string rules = 3;

  // Names of rules that encountered errors during processing.
  repeated string error_rules = 4;

  // Version of the Page Speed library used to generate this Results
  // structure.
  required Version version = 5;
}

// Typed format string arguments.
message FormatArgument {
  enum ArgumentType {
    URL = 1;
    STRING_LITERAL = 2;
    INT_LITERAL = 3;
    BYTES = 4;
    DURATION = 5;
  }

  required ArgumentType type = 1;
  optional string string_value = 2;
  optional int64 int_value = 3;
}

// Result as text document node that contains the markup type, format
// string, instances and children.
message ResultText {
  // format string.  Use '$<number>' to specify position information.
  optional string format = 1;

  // format string arguments.
  repeated FormatArgument args = 2;

  // Children.
  repeated ResultText children = 3;

  // Optimized version of the current resource, if applicable.
  optional bytes optimized_content = 4;
}
