syntax="proto3";
option java_package ="se.umu.cs.ads.fildil.proto.autogen";
option java_multiple_files = true;
option java_outer_classname = "Protocol";

service Streamer {
    //Request a specific chunk
    rpc requestChunk(ChunkRequest) returns (Chunk){}
    //Exchange peer information
    rpc poll(PeerInfo) returns (PeerInfo){}
    //Force-feed a specific chunk
    rpc receiveChunk(Chunk) returns (ReceiveChunkReply){}
}

message Chunk {
    int32 id = 1;
    bytes buf = 2;
}

message PeerInfo {
    int32 highestChunk= 1;
    string uuid = 2;
    string address = 3;
    //<uuid, address:port>
    map<string, string> peers = 4;
}

message ChunkRequest {
    int32 id = 1;
}

message Empty{}

message ReceiveChunkReply {}

