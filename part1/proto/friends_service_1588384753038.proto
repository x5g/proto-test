package bgs.protocol.friends.v1;
import "bgs/low/pb/client/attribute_types.proto";
import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/account_types.proto";
import "bgs/low/pb/client/friends_types.proto";
import "bgs/low/pb/client/invitation_types.proto";
import "bgs/low/pb/client/rpc_types.proto";


message SubscribeRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required uint64 object_id = 2;
}

message UnsubscribeRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional uint64 object_id = 2;
}

message SendInvitationRequest {
	optional .bgs.protocol.Identity agent_identity = 1;
	required .bgs.protocol.EntityId target_id = 2;
	required .bgs.protocol.InvitationParams params = 3;
}

message RevokeInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional fixed64 invitation_id = 2;
}

message AcceptInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required fixed64 invitation_id = 3;
	optional .bgs.protocol.friends.v1.AcceptInvitationOptions options = 4;
}

message DeclineInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required fixed64 invitation_id = 3;
}

message IgnoreInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required fixed64 invitation_id = 3;
}

message RemoveFriendRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required .bgs.protocol.EntityId target_id = 2;
}

message RevokeAllInvitationsRequest {
	optional .bgs.protocol.EntityId agent_id = 2;
}

message ViewFriendsRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required .bgs.protocol.EntityId target_id = 2;
}

message ViewFriendsResponse {
	repeated .bgs.protocol.friends.v1.FriendOfFriend friends = 1;
}

message UpdateFriendStateRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	required .bgs.protocol.EntityId target_id = 2;
	repeated .bgs.protocol.Attribute attribute = 3;
}

message SetAttributeRequest {
	optional .bgs.protocol.account.v1.AccountId agent_id = 1;
	optional .bgs.protocol.account.v1.AccountId target_id = 2;
	repeated .bgs.protocol.Attribute attribute = 3;
}

message GetFriendListRequest {
	optional .bgs.protocol.EntityId agent_id = 2;
}

message GetFriendListResponse {
	repeated .bgs.protocol.friends.v1.Friend friends = 1;
}

message CreateFriendshipRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional .bgs.protocol.EntityId target_id = 2;
	repeated uint32 role = 3;
}

message FriendNotification {
	required .bgs.protocol.friends.v1.Friend target = 1;
	optional .bgs.protocol.EntityId account_id = 5;
}

message UpdateFriendStateNotification {
	required .bgs.protocol.friends.v1.Friend changed_friend = 1;
	optional .bgs.protocol.EntityId account_id = 5;
}

message InvitationNotification {
	required .bgs.protocol.friends.v1.ReceivedInvitation invitation = 1;
	optional uint32 reason = 3 [default = 0];
	optional .bgs.protocol.EntityId account_id = 5;
}

message SentInvitationAddedNotification {
	optional .bgs.protocol.EntityId account_id = 1;
	optional .bgs.protocol.friends.v1.SentInvitation invitation = 2;
}

message SentInvitationRemovedNotification {
	optional .bgs.protocol.EntityId account_id = 1;
	optional fixed64 invitation_id = 2;
	optional uint32 reason = 3;
}

service FriendsService {
	rpc Subscribe (.bgs.protocol.friends.v1.SubscribeRequest) returns (.bgs.protocol.friends.v1.SubscribeResponse);
	rpc SendInvitation (.bgs.protocol.friends.v1.SendInvitationRequest) returns (.bgs.protocol.NoData);
	rpc AcceptInvitation (.bgs.protocol.friends.v1.AcceptInvitationRequest) returns (.bgs.protocol.NoData);
	rpc RevokeInvitation (.bgs.protocol.friends.v1.RevokeInvitationRequest) returns (.bgs.protocol.NoData);
	rpc DeclineInvitation (.bgs.protocol.friends.v1.DeclineInvitationRequest) returns (.bgs.protocol.NoData);
	rpc IgnoreInvitation (.bgs.protocol.friends.v1.IgnoreInvitationRequest) returns (.bgs.protocol.NoData);
	rpc RemoveFriend (.bgs.protocol.friends.v1.RemoveFriendRequest) returns (.bgs.protocol.NoData);
	rpc ViewFriends (.bgs.protocol.friends.v1.ViewFriendsRequest) returns (.bgs.protocol.friends.v1.ViewFriendsResponse);
	rpc UpdateFriendState (.bgs.protocol.friends.v1.UpdateFriendStateRequest) returns (.bgs.protocol.NoData);
	rpc Unsubscribe (.bgs.protocol.friends.v1.UnsubscribeRequest) returns (.bgs.protocol.NoData);
	rpc RevokeAllInvitations (.bgs.protocol.friends.v1.RevokeAllInvitationsRequest) returns (.bgs.protocol.NoData);
	rpc GetFriendList (.bgs.protocol.friends.v1.GetFriendListRequest) returns (.bgs.protocol.friends.v1.GetFriendListResponse);
	rpc CreateFriendship (.bgs.protocol.friends.v1.CreateFriendshipRequest) returns (.bgs.protocol.NoData);
	rpc SetAttribute (.bgs.protocol.friends.v1.SetAttributeRequest) returns (.bgs.protocol.NoData);
}

service FriendsListener {
	rpc OnFriendAdded (.bgs.protocol.friends.v1.FriendNotification) returns (.bgs.protocol.NO_RESPONSE);
	rpc OnFriendRemoved (.bgs.protocol.friends.v1.FriendNotification) returns (.bgs.protocol.NO_RESPONSE);
	rpc OnReceivedInvitationAdded (.bgs.protocol.friends.v1.InvitationNotification) returns (.bgs.protocol.NO_RESPONSE);
	rpc OnReceivedInvitationRemoved (.bgs.protocol.friends.v1.InvitationNotification) returns (.bgs.protocol.NO_RESPONSE);
	rpc OnSentInvitationAdded (.bgs.protocol.friends.v1.SentInvitationAddedNotification) returns (.bgs.protocol.NO_RESPONSE);
	rpc OnSentInvitationRemoved (.bgs.protocol.friends.v1.SentInvitationRemovedNotification) returns (.bgs.protocol.NO_RESPONSE);
	rpc OnUpdateFriendState (.bgs.protocol.friends.v1.UpdateFriendStateNotification) returns (.bgs.protocol.NO_RESPONSE);
}
