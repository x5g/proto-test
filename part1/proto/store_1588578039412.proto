// store protocol

syntax = "proto3";

package store;

service Kvs {
	rpc Get (GetRequest) returns (GetResponse) {}
	rpc Put (PutRequest) returns (PutResponse) {}
	rpc Modify (ModifyRequest) returns (ModifyResponse) {}
	rpc Del (DelRequest) returns (DelResponse) {}
	rpc DelAll (DelRequest) returns (DelResponse) {}
	rpc Keys (KeysRequest) returns (KeysResponse) {}
}

enum Type {
	Null = 0; // null
	Int = 1; // int64 8byte
	Uint = 2;
	Float = 3; // float64 8byte
	Bool = 4; // bool 1byte
	String = 5; // string
	Blob = 6; // Unimplemented bytes
	Array = 7; // Unimplemented array
	Json = 8; // Unimplemented json
}

message Value {
	Type type = 1;
	bytes data = 2;
}

message Entity {
    map<string, Value> data = 1;
}

enum Comp {
	Eq = 0;
	Gt = 1;
	Gte = 2;
	Lt = 3;
	Lte = 4;
	Ne = 5;
	Exists = 6;
}

enum Op {
	Inc = 0; // Increments the value
	Set = 1; // Sets the value
	Unset = 2; // Remove the specified field
	CurrentDate = 3; // Sets the value a field to current date
	Min = 4;
	Max = 5;
	Mul = 6;
	SetOnInsert = 7;
}

message Filter {
	Comp Comp = 1;
	string name = 2;
	Value value = 3;
}

message Update {
	Op op = 1;
	string name = 2;
	Value value = 3;
}

message GetRequest {
	string namespace = 1;
	string key = 2;
}

message GetResponse {
	string namespace = 1;
	string key = 2;
	Entity entity = 3;
}

message PutRequest {
    string namespace = 1;
    string key = 2;
    Entity entity = 3;
}

message PutResponse {
    bool successful = 1;
}

message ModifyRequest {
	string namespace = 1;
    string key = 2;
    repeated Filter filters = 3;
    repeated Update updates = 4;
}

message ModifyResponse {
	string namespace = 1;
	string key = 2;
	bool successful = 3;
	Entity entity = 4;
}

message DelRequest {
	string namespace = 1;
	string key = 2;
}

message DelResponse {}

message KeysRequest {}

message KeysResponse {
	repeated string keys = 1;
}
