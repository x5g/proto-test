#-*- coding: utf-8 -*-
# Generated by the typy Proto.Increment.  DO NOT EDIT!

import typy

timestamps = {
	'C:/Users/joung/Documents/project/typy/test/dict_debug.py': '1498264887.78',
	'C:/Users/joung/Documents/project/typy/test/test_case.py': '1496795388.16',
	'E:/test/typy/test/dict_debug.py': '1498438912.02',
	'E:/test/typy/test/test_case.py': '1504244618.39',
}

BooleanList = typy.Proto.Object('BooleanList',
	'test_case',
	[],
	('bl', typy.pb.List(typy.Boolean())),
)
Empty = typy.Proto.Object('Empty',
	'test_case',
	[],
)
Corpus = typy.Proto.Enum('Corpus', 
	('UNIVERSAL', 0),
	('WEB', 1),
	('IMAGES', 2),
	('LOCAL', 3),
	('NEWS', 4),
	('PRODUCTS', 5),
	('VIDEO', 6),
)
PyType = typy.Proto.Python('PyType')
Vector2 = typy.Proto.Object('Vector2',
	'test_case',
	[],
	('x', typy.pb.Float(default = 0.0, label = '\xe5\x9d\x90\xe6\xa0\x87X')),
	('y', typy.pb.FixedPoint(1, -10, default = 0.0, label = '\xe5\x9d\x90\xe6\xa0\x87Y')),
	('b', typy.pb.Bytes()),
	('e', typy.pb.Enum(Corpus, default = 3, label = 'Corpus')),
	('i', typy.pb.Instance(Empty, label = '\xe7\xa9\xba')),
	('m', typy.pb.Symbol()),
	('p', typy.pb.Python(PyType, label = 'PyType')),
	('s', typy.pb.String()),
	('t', typy.Instance()),
)
Fighter = typy.Proto.Object('Fighter',
	'test_case',
	['Fighter_Part2'],
	('bd', typy.pb.Dict(typy.String(), typy.Bytes(), label = 'bd')),
	('bl', typy.pb.List(typy.Bytes(), label = 'bl')),
	('dd', typy.pb.Dict(typy.Integer(), typy.Dict(typy.Integer(), typy.Instance(Vector2, typy.Double(), typy.Enum(Corpus), typy.String())), label = 'dd')),
	('dv', typy.pb.Instance(typy.Dict(typy.Integer(), typy.Instance(typy.Float(), typy.String())), typy.Integer(), label = 'dv')),
	('ed', typy.pb.Dict(typy.Long(), typy.Enum(Corpus), label = 'ed')),
	('el', typy.pb.List(typy.Enum(Corpus), label = 'el')),
	('fdd', typy.pb.Dict(typy.Integer(), typy.Dict(typy.Integer(), typy.Float()), label = 'fdd')),
	('fdv', typy.pb.Instance(typy.Dict(typy.Integer(), typy.Float()), typy.Integer(), label = 'fdv')),
	('fl', typy.pb.List(typy.Float(), label = 'fl')),
	('fld', typy.pb.Dict(typy.Integer(), typy.List(typy.Float()), label = 'fld')),
	('flv', typy.pb.Instance(typy.Integer(), typy.List(typy.Float()), label = 'flv')),
	('hp', typy.pb.Float(default = 100, label = '\xe8\xa1\x80\xe9\x87\x8f')),
	('isAwake', typy.pb.Boolean(default = False)),
	('ld', typy.pb.Dict(typy.Integer(), typy.List(typy.Instance(Vector2, typy.Double(), typy.Enum(Corpus), typy.String())), label = 'ld')),
	('ll', typy.pb.List(typy.Instance(typy.List(typy.Float())), label = 'll')),
	('lv', typy.pb.Instance(typy.Integer(), typy.List(typy.Instance(typy.Float(), typy.String())), label = 'lv')),
	('nv', typy.pb.Instance(None, typy.Integer(), label = 'nv')),
	('pos', typy.pb.Instance(Vector2, label = '\xe5\x9d\x90\xe6\xa0\x87')),
	('posi', typy.pb.Dict(typy.Integer(), typy.Float(), label = 'posi')),
	('posl', typy.pb.List(typy.Instance(Vector2), label = 'posl')),
	('posll', typy.pb.List(typy.Instance(typy.List(typy.Instance(Vector2))), label = 'posll')),
	('poss', typy.pb.Dict(typy.Long(), typy.Instance(Vector2), label = 'poss')),
	('pyd', typy.pb.Dict(typy.Integer(), typy.Python(PyType), label = 'pyd')),
	('pyl', typy.pb.List(typy.Python(PyType), label = 'pyl')),
	('pyv1', typy.pb.Instance(typy.Integer(), typy.Python(PyType), label = 'pyv1')),
	('pyv2', typy.pb.Instance(typy.Integer(), typy.Python(PyType), label = 'pyv2')),
	('sd', typy.pb.Dict(typy.Integer(), typy.String(), label = 'sd')),
	('sl', typy.pb.List(typy.String(), label = 'sl')),
	('v0', typy.pb.Instance(Vector2, typy.Bytes(), typy.Float(), typy.Integer(), label = 'v0')),
	('v1', typy.pb.Instance(Vector2, typy.Bytes(), typy.Float(), typy.Integer(), label = 'v1')),
	('v2', typy.pb.Instance(Vector2, typy.Float(), typy.Integer(), typy.String(), label = 'v2')),
	('v3', typy.pb.Instance(Vector2, typy.Float(), typy.Integer(), typy.String(), label = 'v3')),
	('v4', typy.pb.Instance(Vector2, typy.Float(), typy.Integer(), typy.String(), label = 'v4')),
	('vd', typy.pb.Dict(typy.Integer(), typy.Instance(Vector2, typy.Double(), typy.Enum(Corpus), typy.String()), label = 'vd')),
	('vl', typy.pb.List(typy.Instance(Vector2, typy.FixedPoint(3, 0), typy.Integer(), typy.String()), label = 'vl')),
)
Fighter_Part1 = typy.Proto.Object('Fighter_Part1',
	'test_case',
	[],
	('hp', typy.pb.Float(default = 100, label = '\xe8\xa1\x80\xe9\x87\x8f')),
	('isAwake', typy.pb.Boolean(default = False)),
	('pos', typy.pb.Instance(Vector2, label = '\xe5\x9d\x90\xe6\xa0\x87')),
	('posi', typy.pb.Dict(typy.Integer(), typy.Float(), label = 'posi')),
	('posl', typy.pb.List(typy.Instance(Vector2), label = 'posl')),
	('posll', typy.pb.List(typy.Instance(typy.List(typy.Instance(Vector2))), label = 'posll')),
	('poss', typy.pb.Dict(typy.Long(), typy.Instance(Vector2), label = 'poss')),
	('pyd', typy.pb.Dict(typy.Integer(), typy.Python(PyType), label = 'pyd')),
	('pyl', typy.pb.List(typy.Python(PyType), label = 'pyl')),
	('pyv1', typy.pb.Instance(typy.Integer(), typy.Python(PyType), label = 'pyv1')),
	('pyv2', typy.pb.Instance(typy.Integer(), typy.Python(PyType), label = 'pyv2')),
)
Fighter_Part2 = typy.Proto.Object('Fighter_Part2',
	'test_case',
	['Fighter_Part1'],
	('bd', typy.pb.Dict(typy.String(), typy.Bytes(), label = 'bd')),
	('bl', typy.pb.List(typy.Bytes(), label = 'bl')),
	('ed', typy.pb.Dict(typy.Long(), typy.Enum(Corpus), label = 'ed')),
	('el', typy.pb.List(typy.Enum(Corpus), label = 'el')),
	('fl', typy.pb.List(typy.Float(), label = 'fl')),
	('hp', typy.pb.Float(default = 100, label = '\xe8\xa1\x80\xe9\x87\x8f')),
	('isAwake', typy.pb.Boolean(default = False)),
	('ll', typy.pb.List(typy.Instance(typy.List(typy.Float())), label = 'll')),
	('pos', typy.pb.Instance(Vector2, label = '\xe5\x9d\x90\xe6\xa0\x87')),
	('posi', typy.pb.Dict(typy.Integer(), typy.Float(), label = 'posi')),
	('posl', typy.pb.List(typy.Instance(Vector2), label = 'posl')),
	('posll', typy.pb.List(typy.Instance(typy.List(typy.Instance(Vector2))), label = 'posll')),
	('poss', typy.pb.Dict(typy.Long(), typy.Instance(Vector2), label = 'poss')),
	('pyd', typy.pb.Dict(typy.Integer(), typy.Python(PyType), label = 'pyd')),
	('pyl', typy.pb.List(typy.Python(PyType), label = 'pyl')),
	('pyv1', typy.pb.Instance(typy.Integer(), typy.Python(PyType), label = 'pyv1')),
	('pyv2', typy.pb.Instance(typy.Integer(), typy.Python(PyType), label = 'pyv2')),
	('sd', typy.pb.Dict(typy.Integer(), typy.String(), label = 'sd')),
	('sl', typy.pb.List(typy.String(), label = 'sl')),
)
RPG = typy.Proto.Object('RPG',
	'test_case',
	[],
	('fighter', typy.pb.Instance(Fighter, label = 'fighter')),
)
Vector3 = typy.Proto.Python('Vector3')
SkillParam = typy.Proto.Object('SkillParam',
	'test_case',
	[],
	('buckID', typy.pb.Bytes()),
	('destPos', typy.pb.Python(Vector3)),
	('destRot', typy.pb.Python(Vector3)),
	('extraParam', typy.pb.Dict(typy.Bytes(), typy.Instance(typy.Boolean(), typy.Bytes(), typy.Float(), typy.Integer()))),
	('origPos', typy.pb.Python(Vector3)),
	('origRot', typy.pb.Python(Vector3)),
	('targetID', typy.pb.Bytes()),
	('targetIDs', typy.pb.List(typy.Bytes())),
)
onInitRuntime = typy.Proto.Object('onInitRuntime',
	'test_case',
	[],
	('buckID', typy.pb.Bytes()),
	('events', typy.pb.List(typy.Integer())),
	('flowID', typy.pb.Integer()),
	('ownerID', typy.pb.Bytes()),
	('params', typy.pb.List(typy.Instance(SkillParam))),
	('passBuckEvents', typy.pb.List(typy.Integer())),
	('prev', typy.pb.Integer()),
	('skillID', typy.pb.Integer()),
	('skillIdx', typy.pb.Integer()),
	('specificEvents', typy.pb.Dict(typy.Bytes(), typy.List(typy.Integer()))),
	('uiid', typy.pb.Integer()),
	('unitIndex', typy.pb.Integer()),
)
playSoundVO_1 = typy.Proto.Object('playSoundVO_1',
	'test_case',
	[],
	('interval', typy.pb.Float()),
	('path', typy.pb.String()),
)
playSoundVO_2 = typy.Proto.Object('playSoundVO_2',
	'test_case',
	[],
	('path', typy.pb.String()),
)
