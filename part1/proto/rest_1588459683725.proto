syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

message StringMessage {
    string value = 1 [(validator.field) = {regex: "^[a-c]{2,5}$"}];
}

message InnerMessage {
    // some_integer can only be in range (1, 100).
    int32 some_integer = 1 [(validator.field) = {regex: "^[1-100]$"}];
    // some_float can only be in range (0;1).
    double some_float = 2 [(validator.field) = {regex: "^[0-1]$"}];
}

message OuterMessage {
    // important_string must be a lowercase alpha-numeric of 5 to 30 characters (RE2 syntax).
    string important_string = 1 [(validator.field) = {regex: "^[a-z]{2,5}$"}];
    // proto3 doesn't have `required`, the `msg_exist` enforces presence of InnerMessage.
    InnerMessage inner = 2 [(validator.field) = {msg_exists : true}];
}

service RestService{
    rpc Get(StringMessage) returns (StringMessage){
        option (google.api.http) ={
            get:"/get/{value}"
        };
    }

    rpc Post(StringMessage) returns (StringMessage){
        option (google.api.http) ={
            post:"/post"
            body:"*"
        };
    }
}